[["index.html", "Online appendix for the paper: “On the Assessment of Benchmark Suites for Algorithm Comparison” Chapter 1 Foreword 1.1 Session info", " Online appendix for the paper: “On the Assessment of Benchmark Suites for Algorithm Comparison” David Issa Mattos, Lucas Ruud, Jan Bosch and Helena Holmström Olsson. 2021-04-15 Chapter 1 Foreword This is the online appendix for the paper “On the Assessment of Benchmark Suites for Algorithm Comparison”. It contains a commented and reproducible code for all the analysis, tables and plots presented in the paper and additional content. The code used to generate this appendix is available at the repository: https://github.com/davidissamattos/evo-irt 1.1 Session info This appendix is compiled automatically and the following session information was used to generate this appendix: sessionInfo() ## R version 4.0.3 (2020-10-10) ## Platform: x86_64-apple-darwin17.0 (64-bit) ## Running under: macOS Big Sur 10.16 ## ## Matrix products: default ## BLAS: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRblas.dylib ## LAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib ## ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] cmdstanr_0.3.0.9000 latex2exp_0.5.0 kableExtra_1.2.1 ## [4] bayesplot_1.8.0 posterior_0.1.3 knitr_1.30 ## [7] forcats_0.5.0 stringr_1.4.0 dplyr_1.0.2 ## [10] purrr_0.3.4 readr_1.3.1 tidyr_1.1.2 ## [13] tibble_3.0.4 ggplot2_3.3.3 tidyverse_1.3.0 ## ## loaded via a namespace (and not attached): ## [1] tidyselect_1.1.0 xfun_0.20 haven_2.3.1 colorspace_2.0-0 ## [5] vctrs_0.3.6 generics_0.1.0 viridisLite_0.3.0 htmltools_0.5.1 ## [9] yaml_2.2.1 blob_1.2.1 rlang_0.4.10 pillar_1.4.7 ## [13] glue_1.4.2 withr_2.3.0 DBI_1.1.0 dbplyr_1.4.4 ## [17] modelr_0.1.8 readxl_1.3.1 plyr_1.8.6 lifecycle_0.2.0 ## [21] munsell_0.5.0 gtable_0.3.0 cellranger_1.1.0 rvest_0.3.6 ## [25] evaluate_0.14 fansi_0.4.1 broom_0.7.0 Rcpp_1.0.5 ## [29] scales_1.1.1 backports_1.2.1 checkmate_2.0.0 webshot_0.5.2 ## [33] jsonlite_1.7.2 abind_1.4-5 fs_1.5.0 hms_0.5.3 ## [37] digest_0.6.27 stringi_1.5.3 bookdown_0.21 grid_4.0.3 ## [41] cli_2.2.0 tools_4.0.3 magrittr_2.0.1 crayon_1.3.4 ## [45] pkgconfig_2.0.3 ellipsis_0.3.1 xml2_1.3.2 ggridges_0.5.3 ## [49] reprex_0.3.0 lubridate_1.7.9 assertthat_0.2.1 rmarkdown_2.6 ## [53] httr_1.4.2 rstudioapi_0.13 R6_2.5.0 compiler_4.0.3 "],["importing-the-data.html", "Chapter 2 Importing the data 2.1 PBO dataset 2.2 BBOB 2019 2.3 BBOB 2009", " Chapter 2 Importing the data In this chapter, we will import the data using the package IOHAnalyzer and the data available in the repositories below. https://github.com/IOHprofiler/IOHdata for the PBO dataset https://numbbo.github.io/data-archive/bbob/ for the BBOB 2019 and 2009 The processed data from this chapter is available in the folder data of the repository https://github.com/davidissamattos/evo-irt library(IOHanalyzer) To import this data, we use the function below to convert to csv format for easier analysis. This gives a summarized values of the number of runs and the number of succeeded runs. import_data &lt;- function(location, folder=F){ #dsl is a datasetlist from IOHanalyzer if(folder==T) dsl &lt;- DataSetList(location) else dsl&lt;- readRDS(location) #each dataset is an element of this list, e.g. dsl[[1]] #each dataset is a list with three items RT (runtime value for fixed target) FV (function value for fixed budget) and PAR (parameters) ds_list_fv &lt;- lapply(dsl,get_FV_overview) ds_list_rt &lt;- lapply(dsl,get_RT_overview) fv &lt;- do.call(rbind,ds_list_fv) rt &lt;- do.call(rbind,ds_list_rt) out &lt;- list(rt=rt, fv=fv) } 2.1 PBO dataset The IOHData repository already has some benchmarks in the RDS format which we will use here. d_pbo &lt;- import_data(&#39;data/IOHdata-master/iohprofiler/2019gecco-ins11-1run.rds&#39;, folder = F) d_pbo_fv &lt;- d_pbo$fv d_pbo_fv$succ &lt;- d_pbo_fv$succ %&gt;% replace_na(0) write_csv(d_pbo_fv,&#39;data/pbo.csv&#39;) 2.2 BBOB 2019 Import folder d_bbob1 &lt;- import_data(&#39;data/BBOB/Adaptive-Two-Mode_bbob_Bodner/&#39;, folder = T) d_bbob2 &lt;- import_data(&#39;data/BBOB/adapt-Nelder-Mead-scipy-2019_bbob_Varelas_Dahito/&#39;, folder = T) d_bbob3 &lt;- import_data(&#39;data/BBOB/BFGS-scipy-2019_bbob_Varelas_Dahito/minimize_on_bbob_budget100000xD/&#39;, folder = T) d_bbob4 &lt;- import_data(&#39;data/BBOB/CG-scipy-2019_bbob_Varelas_Dahito/&#39;, folder = T) d_bbob5 &lt;- import_data(&#39;data/BBOB/COBYLA-scipy-2019_bbob_Varelas_Dahito/&#39;, folder = T) d_bbob6 &lt;- import_data(&#39;data/BBOB/DE-scipy-2019_bbob_Varelas_Dahito/&#39;, folder = T) d_bbob7 &lt;- import_data(&#39;data/BBOB/L-BFGS-B-scipy-2019_bbob_Varelas_Dahito/&#39;, folder = T) d_bbob8 &lt;- import_data(&#39;data/BBOB/Nelder-Mead-scipy-2019_bbob_Varelas_Dahito/&#39;, folder = T) d_bbob9 &lt;- import_data(&#39;data/BBOB/Powell-scipy-2019_bbob_Varelas_Dahito/&#39;, folder = T) d_bbob10 &lt;- import_data(&#39;data/BBOB/RS-4-initIn0_bbob_Brockhoff_Hansen/&#39;, folder = T) d_bbob11 &lt;- import_data(&#39;data/BBOB/RS-5-initIn0_bbob_Brockhoff_Hansen/&#39;, folder = T) d_bbob12 &lt;- import_data(&#39;data/BBOB/RS-6-initIn0_bbob_Brockhoff_Hansen/&#39;, folder = T) d_bbob13 &lt;- import_data(&#39;data/BBOB/TNC-scipy-2019_bbob_Varelas_Dahito/&#39;, folder = T) Now we merge these datasets into a single one d_bbob &lt;- rbind(d_bbob1$fv, d_bbob2$fv, d_bbob3$fv, d_bbob4$fv, d_bbob5$fv, d_bbob6$fv, d_bbob7$fv, d_bbob8$fv, d_bbob9$fv, d_bbob10$fv, d_bbob11$fv, d_bbob12$fv, d_bbob13$fv ) #NA in succ will become 0 d_bbob$succ &lt;- d_bbob$succ %&gt;% replace_na(0) write_csv(d_bbob,&#39;data/bbob2019.csv&#39;) 2.3 BBOB 2009 bbob_2009_dirs &lt;- list.dirs(path = &quot;data/BBOB2009&quot;, full.names = TRUE, recursive = F) bbob2009&lt;-NULL for(i in seq(1:length(bbob_2009_dirs))){ d &lt;- import_data(bbob_2009_dirs[i], folder = T) bbob2009 &lt;- rbind(bbob2009,d$fv) } bbob2009$succ &lt;- bbob2009$succ %&gt;% replace_na(0) write_csv(bbob2009,&#39;data/bbob2009.csv&#39;) "],["irt-stan.html", "Chapter 3 IRT Stan 3.1 2PL model 3.2 Bayesian 2PL with multiple attempts", " Chapter 3 IRT Stan 3.1 2PL model The description and interpretation of the model is available in the paper. Here we are just generating the plots in the paper Function to generate the item characteristic curve. icc_2pl &lt;- function(a, b, label, thetamin=-5, thetamax=5, step=0.1){ x&lt;-seq(from=thetamin, to=thetamax, by=step) y&lt;-exp(a*(x-b))/(1+exp(a*(x-b))) out&lt;-data.frame( Prob=y, Ability=x, label=rep(label,length(x))) return(out) } 3.1.1 Impact of item difficulty Let’s plot three item characteristic curves with different difficulties and the same discrimination. First, we generate the curves: icc_easy &lt;- icc_2pl(a=3,b=-3, label = &#39;Easy (b=-3)&#39;) icc_medium &lt;- icc_2pl(a=3,b=0, label = &#39;Medium (b=0)&#39;) icc_hard &lt;- icc_2pl(a=3,b=3, label = &#39;Hard (b=3)&#39;) icc_b &lt;- rbind(icc_easy,icc_medium,icc_hard) Then we plot it ggplot(icc_b, aes(x=Ability, y=Prob, color=label))+ geom_line()+ labs( title=&#39;Item Characteristic Curve&#39;, # subtitle = &#39;Impact of difficulty parameter&#39;, x=unname(TeX(&quot;Ability ($\\\\theta$)&quot;)), y=&#39;Probability of solving&#39;, color = &#39;Difficulty&#39; )+ theme_bw()+ theme(legend.position = &#39;bottom&#39;) 3.1.2 Impact of item discrimination Let’s plot three item characteristic curves with different discrimination and the same difficulty First, we generate the curves: icc_lowdisc &lt;- icc_2pl(a=0.3,b=0, label = &#39;Low (a=0.3)&#39;) icc_mediumdisc &lt;- icc_2pl(a=1,b=0, label = &#39;Medium (a=1)&#39;) icc_highdisc &lt;- icc_2pl(a=3,b=0, label = &#39;High (a=3)&#39;) icc_a &lt;- rbind(icc_lowdisc,icc_mediumdisc,icc_highdisc) Then we plot them: ggplot(icc_a, aes(x=Ability, y=Prob, color=label))+ geom_line()+ labs( title=&#39;Item Characteristic Curve&#39;, x=unname(TeX(&quot;Ability ($\\\\theta$)&quot;)), y=&#39;Probability of solving&#39;, color = &#39;Discrimination&#39; )+ theme_bw()+ theme(legend.position = &#39;bottom&#39;) 3.1.3 Item Information We can calculate the item information for the 2PL. We use the direct formula for the information from the paper. item_info &lt;- function(a,b,thetamin=-5, thetamax=5,step=0.1){ theta &lt;- seq(from=thetamin, to=thetamax, by=step) p&lt;-exp(a*(theta-b))/(1+exp(a*(theta-b))) q&lt;-1-p info &lt;- a^2*p*q return(list(info=info,theta=theta)) } Plotting this for a few different item characteristic curves (different values of a and b). First we create a long data frame with one column for the information d_item_info_pars &lt;- data.frame(a=c(0.3,1,1.2,0.8,0.6), b=c(1.5,-2.2,1,-0.4,0.9)) d_item_info&lt;-NULL for(row in 1:nrow(d_item_info_pars)){ info_list &lt;- item_info(d_item_info_pars$a[row],d_item_info_pars$b[row]) d_item_info&lt;-rbind( d_item_info, data.frame( information=info_list$info, theta=info_list$theta, label=rep( glue::glue(&#39;a=&#39;,d_item_info_pars$a[row], &#39;,b=&#39;,d_item_info_pars$b[row]), length(info_list$info) ) ) ) } Now we can plot: ggplot(d_item_info, aes(x=theta, y=information, color=label))+ geom_line()+ labs( title=&#39;Item Information Curve&#39;, x=unname(TeX(&quot;Ability ($\\\\theta$)&quot;)), y=&#39;Information&#39;, color = &#39;Item&#39; )+ theme_bw()+ theme(legend.position = &#39;bottom&#39;)+ guides(color=guide_legend(nrow=2,byrow=TRUE)) 3.1.4 Test information For a test, we can calculate the test information as the sum of the individual items. First let’s pivot wider so we can sum the columns: d_item_info_wider &lt;- d_item_info %&gt;% pivot_wider(names_from = &#39;label&#39;, values_from = &#39;information&#39;) %&gt;% mutate(TestInfo = dplyr::select(. ,starts_with(&#39;a=&#39;)) %&gt;% rowSums()) Now we can plot the test information curve: ggplot(d_item_info_wider, aes(x=theta, y=TestInfo)) + geom_line(aes(y=TestInfo))+ labs( title=&#39;Test Information Curve&#39;, x=unname(TeX(&quot;Ability ($\\\\theta$)&quot;)), y=&#39;Information&#39; )+ theme_bw() 3.2 Bayesian 2PL with multiple attempts The Bayesian two parameter logistic item response theory model with multiple attempts is represented by the following equations. \\[ y_{i,p} \\sim \\text{Binomial}(N_{i,p},\\mu_{i,p}) \\\\ \\mu_{i,p} = \\dfrac{\\exp(a_i*(b_i-\\theta_p))}{1+ \\exp(a_i*(b_i-\\theta_p))} \\\\ a_i \\sim \\text{Half-}\\mathcal{N}(0,3) \\\\ b_i \\sim \\mathcal{N}(0,3)\\\\ \\theta_p \\sim \\mathcal{N}(0,3) \\] The Stan code for this model is shown below: show_stan_code(&#39;models/irt2pl.stan&#39;) ## // IRT 2PL with multiple tries ## // Author: David Issa Mattos ## // Date: 5 April 2021 ## ## data { ## int&lt;lower=0&gt; N; // size of the vector ## int&lt;lower=0&gt; y_succ[N]; // number of successful tries ## int&lt;lower=0&gt; N_tries[N]; // number of tries ## int p[N]; // test taker index(the model) ## int&lt;lower=0&gt; Np; // number of test takes (number of models) ## int item[N]; // item index of the test (the dataset) ## int&lt;lower=0&gt; Nitem; // number of items in the test ## } ## ## ## parameters { ## real b[Nitem]; // difficulty parameter ## real&lt;lower=0&gt; a[Nitem]; // discrimination parameter ## real theta[Np]; // ability of the test taker ## } ## ## model { ## real prob[N]; ## ## //Weakly informative priors ## b ~ normal(0, 3); ## a ~ normal(0,3); ## theta ~ normal(0,3); ## ## //Linear gaussian model ## for(i in 1:N){ ## real mu; ## mu = a[item[i]]*(theta[p[i]]- b[item[i]]); ## prob[i] = exp(mu)/(1+exp(mu)); ## } ## y_succ ~ binomial(N_tries,prob); ## ## } ## ## generated quantities{ ## vector[N] log_lik; ## vector[N] y_rep; ## for(i in 1:N){ ## real mu; ## real prob; ## mu = a[item[i]]*(theta[p[i]]- b[item[i]]); ## prob = exp(mu)/(1+exp(mu)); ## log_lik[i] = binomial_lpmf(y_succ[i] | N_tries[i], prob ); ## y_rep[i] = binomial_rng(N_tries[i], prob); ## } ## } "],["case-study-i-bbob-2019.html", "Chapter 4 Case Study I: BBOB 2019 4.1 Importing the data 4.2 Preparing the Stan data 4.3 Diagnostics 4.4 Results", " Chapter 4 Case Study I: BBOB 2019 4.1 Importing the data To illustrate and make the analysis, we will the number of dimensions equal to 5 (since the benchmark functions are all scalable). To do an analysis with different dimensions just change the code here d_bbob &lt;- read_csv(&#39;data/bbob2019.csv&#39;) %&gt;% select(algId, DIM, funcId, runs, succ, budget) %&gt;% filter(DIM==5) %&gt;% mutate(algId_index = as.integer(as.factor(algId))) #vector with the names in order benchmarks &lt;- seq(1,24) algorithms &lt;- levels(as.factor(d_bbob$algId)) 4.2 Preparing the Stan data Creating a list for Stan. bbob_standata &lt;- list( N = nrow(d_bbob), y_succ = as.integer(d_bbob$succ), N_tries = as.integer(d_bbob$runs), p = d_bbob$algId_index, Np = as.integer(length(unique(d_bbob$algId_index))), item = as.integer(d_bbob$funcId), Nitem = as.integer(length(unique(d_bbob$funcId))) ) Calling the model with cmdstanr irt2pl &lt;- cmdstan_model(&#39;models/irt2pl.stan&#39;) fit_bbob &lt;- irt2pl$sample( data= bbob_standata, chains = 4, iter_sampling = 4000, parallel_chains = 4, max_treedepth = 15 ) fit_bbob$save_object(file=&#39;fitted/bbob5.RDS&#39;) To load the fitted model (to save time in compiling this document) fit_bbob&lt;-readRDS(&#39;fitted/bbob5.RDS&#39;) 4.3 Diagnostics Getting the draws from the posterior draws_a &lt;- fit_bbob$draws(&#39;a&#39;) draws_b &lt;- fit_bbob$draws(&#39;b&#39;) draws_theta &lt;- fit_bbob$draws(&#39;theta&#39;) 4.3.1 Traceplots mcmc_trace(draws_a) mcmc_trace(draws_b) mcmc_trace(draws_theta) 4.3.2 Rhat and Effective samples fit_bbob$summary() %&gt;% kable(caption=&#39;Summary values fit of the model, including effective samples and Rhat&#39;, booktabs=T, digits =3, format=&#39;html&#39;) %&gt;% kable_styling() %&gt;% scroll_box() Table 4.1: Summary values fit of the model, including effective samples and Rhat variable mean median sd mad q5 q95 rhat ess_bulk ess_tail lp__ -876.118 -875.824 6.658 6.666 -887.593 -865.815 1.000 3962.957 7423.648 b[1] 0.190 0.189 0.526 0.517 -0.675 1.049 1.003 1655.798 3234.633 b[2] 0.421 0.418 0.537 0.529 -0.458 1.301 1.003 1714.585 3269.607 b[3] 0.126 0.120 0.532 0.528 -0.750 0.999 1.003 1662.807 3212.317 b[4] 0.400 0.384 0.582 0.572 -0.532 1.366 1.003 1815.237 3702.849 b[5] -10.606 -10.553 1.755 1.745 -13.618 -7.825 1.000 9271.595 11117.350 b[6] 1.987 1.784 1.170 0.969 0.476 4.159 1.001 4259.516 6617.055 b[7] 0.788 0.734 0.711 0.633 -0.260 1.992 1.002 2240.195 4102.527 b[8] 0.421 0.420 0.536 0.526 -0.463 1.306 1.003 1742.331 3435.551 b[9] 0.678 0.657 0.590 0.561 -0.248 1.668 1.002 2018.667 3758.684 b[10] 0.690 0.667 0.600 0.572 -0.247 1.680 1.002 2031.685 3763.513 b[11] 0.824 0.788 0.651 0.591 -0.148 1.884 1.001 2192.201 3938.860 b[12] 1.993 1.802 1.164 0.998 0.492 4.163 1.001 4568.658 6773.007 b[13] 2.420 2.202 1.295 1.138 0.709 4.876 1.000 5568.265 7220.730 b[14] 2.413 2.204 1.276 1.138 0.713 4.800 1.001 5160.159 6932.234 b[15] 2.419 2.182 1.298 1.123 0.747 4.936 1.001 4644.611 7607.595 b[16] 2.400 2.195 1.266 1.129 0.717 4.822 1.001 5039.876 7317.296 b[17] 2.420 2.195 1.290 1.142 0.715 4.873 1.001 5288.295 7216.751 b[18] 2.401 2.191 1.280 1.132 0.719 4.779 1.001 5412.655 7130.342 b[19] 1.432 1.336 0.880 0.793 0.186 2.976 1.001 3445.220 5449.716 b[20] 2.406 2.178 1.298 1.140 0.714 4.874 1.001 5362.057 6661.986 b[21] 1.239 1.138 0.905 0.829 -0.056 2.847 1.001 3242.422 4953.712 b[22] 0.810 0.734 0.830 0.763 -0.397 2.233 1.002 3062.358 4872.259 b[23] 2.398 2.192 1.286 1.155 0.702 4.841 1.001 5267.369 6601.671 b[24] 2.441 2.218 1.307 1.153 0.721 4.945 1.001 5375.168 7470.779 a[1] 6.522 6.430 1.424 1.420 4.318 9.009 1.000 14280.165 11093.421 a[2] 4.324 4.250 1.138 1.115 2.598 6.321 1.000 12287.535 9783.007 a[3] 4.020 3.931 1.189 1.173 2.216 6.127 1.000 10109.111 9225.800 a[4] 2.414 2.328 0.859 0.852 1.181 3.964 1.000 9537.022 8863.253 a[5] 0.184 0.179 0.040 0.038 0.127 0.255 1.001 9960.494 11299.490 a[6] 1.692 1.565 0.762 0.714 0.691 3.139 1.000 9466.497 6907.590 a[7] 1.939 1.821 0.789 0.742 0.865 3.392 1.000 8753.252 6591.984 a[8] 4.318 4.244 1.128 1.095 2.607 6.312 1.000 12418.532 10295.961 a[9] 3.290 3.213 1.042 1.031 1.714 5.119 1.000 11748.731 8343.076 a[10] 3.266 3.192 1.056 1.042 1.665 5.118 1.000 9944.351 6922.556 a[11] 2.939 2.848 1.015 0.996 1.424 4.730 1.001 10865.103 7069.033 a[12] 1.685 1.554 0.764 0.726 0.693 3.123 1.000 9145.424 7175.492 a[13] 1.478 1.347 0.670 0.612 0.629 2.763 1.000 10919.706 8940.304 a[14] 1.478 1.343 0.676 0.606 0.641 2.775 1.001 11612.301 9517.923 a[15] 1.473 1.355 0.666 0.613 0.634 2.707 1.000 9236.735 7824.179 a[16] 1.482 1.347 0.670 0.608 0.641 2.758 1.000 9694.299 7818.154 a[17] 1.476 1.345 0.674 0.618 0.628 2.734 1.001 9164.008 8435.066 a[18] 1.484 1.356 0.666 0.609 0.640 2.761 1.000 10599.824 8511.088 a[19] 1.182 1.113 0.457 0.412 0.576 2.044 1.000 11309.124 8818.726 a[20] 1.388 1.275 0.624 0.582 0.598 2.572 1.000 9183.205 7985.132 a[21] 1.023 0.939 0.439 0.379 0.477 1.857 1.000 8203.122 8222.777 a[22] 0.670 0.632 0.247 0.221 0.347 1.115 1.001 7799.858 8398.404 a[23] 1.495 1.355 0.691 0.631 0.630 2.813 1.000 10373.600 8546.457 a[24] 1.469 1.340 0.675 0.608 0.620 2.766 1.000 10191.232 8757.702 theta[1] -0.691 -0.690 0.553 0.542 -1.604 0.212 1.003 1792.092 3591.987 theta[2] -0.024 -0.024 0.528 0.519 -0.892 0.838 1.003 1681.458 3361.608 theta[3] -0.255 -0.254 0.532 0.523 -1.131 0.624 1.003 1656.443 3263.409 theta[4] -3.989 -3.911 1.205 1.175 -6.100 -2.172 1.000 7015.079 9333.640 theta[5] -4.003 -3.904 1.230 1.185 -6.193 -2.156 1.000 7087.536 9941.552 theta[6] -3.993 -3.896 1.201 1.171 -6.094 -2.180 1.000 7278.511 9311.373 theta[7] -4.002 -3.912 1.229 1.200 -6.159 -2.152 1.000 7797.899 8536.771 theta[8] -1.284 -1.271 0.634 0.621 -2.345 -0.284 1.002 2255.589 4664.016 theta[9] 0.436 0.433 0.523 0.519 -0.430 1.292 1.003 1642.108 2997.515 theta[10] -0.359 -0.356 0.537 0.529 -1.250 0.518 1.003 1664.464 3065.114 theta[11] -0.359 -0.360 0.538 0.535 -1.243 0.521 1.003 1652.009 3192.851 theta[12] -0.232 -0.235 0.532 0.524 -1.110 0.644 1.003 1663.252 3203.973 theta[13] -4.002 -3.899 1.220 1.195 -6.193 -2.180 1.000 7255.309 8999.452 log_lik[1] -3.856 -3.600 1.895 1.815 -7.351 -1.224 1.000 11730.230 11183.189 log_lik[2] -1.916 -1.814 0.807 0.766 -3.396 -0.794 1.000 13246.275 13328.986 log_lik[3] -1.731 -1.640 0.715 0.678 -3.031 -0.735 1.000 12526.085 13253.912 log_lik[4] -1.014 -0.950 0.440 0.412 -1.822 -0.425 1.000 15558.560 11006.351 log_lik[5] -0.839 -0.779 0.386 0.361 -1.547 -0.329 1.000 15384.663 10254.412 log_lik[6] -0.843 -0.781 0.387 0.357 -1.558 -0.333 1.000 15260.882 9796.931 log_lik[7] -0.846 -0.784 0.386 0.357 -1.563 -0.331 1.000 15579.334 10634.497 log_lik[8] -0.845 -0.788 0.381 0.353 -1.553 -0.334 1.000 16157.641 9999.505 log_lik[9] -0.850 -0.788 0.392 0.363 -1.581 -0.325 1.000 14188.717 10311.350 log_lik[10] -0.837 -0.776 0.385 0.361 -1.551 -0.327 1.000 14428.380 9282.227 log_lik[11] -3.228 -3.132 0.842 0.806 -4.752 -2.015 1.000 14332.792 11440.464 log_lik[12] -2.503 -2.350 1.128 1.062 -4.578 -0.946 1.000 12060.656 12489.088 log_lik[13] -1.003 -0.938 0.431 0.399 -1.799 -0.422 1.001 14586.492 10119.877 log_lik[14] -4.583 -4.496 1.023 1.009 -6.381 -3.079 1.000 13947.974 12988.870 log_lik[15] -7.474 -7.382 1.310 1.297 -9.779 -5.512 1.000 13743.806 12253.677 log_lik[16] -0.845 -0.785 0.384 0.356 -1.560 -0.329 1.000 14837.135 10565.830 log_lik[17] -0.842 -0.779 0.395 0.360 -1.580 -0.324 1.000 15294.867 9785.983 log_lik[18] -14.676 -14.443 4.154 4.210 -21.870 -8.185 1.000 12069.669 12838.810 log_lik[19] -18.000 -17.930 3.696 3.678 -24.211 -12.018 1.001 12301.967 11676.505 log_lik[20] -2.161 -2.129 0.460 0.458 -2.960 -1.469 1.000 15998.126 10390.440 log_lik[21] -1.013 -0.942 0.446 0.413 -1.846 -0.419 1.000 15666.755 11035.843 log_lik[22] -22.689 -22.636 3.917 3.919 -29.128 -16.341 1.000 11197.851 10640.538 log_lik[23] -2.503 -2.346 1.136 1.076 -4.538 -0.940 1.000 12174.162 12810.337 log_lik[24] -1.918 -1.806 0.815 0.762 -3.390 -0.794 1.000 12089.180 12388.535 log_lik[25] -0.143 -0.068 0.212 0.085 -0.531 -0.002 1.000 12042.076 12632.262 log_lik[26] -0.330 -0.254 0.283 0.230 -0.903 -0.030 1.000 12824.888 11729.979 log_lik[27] -0.351 -0.278 0.282 0.240 -0.909 -0.039 1.000 12653.266 13133.934 log_lik[28] -0.389 -0.345 0.242 0.226 -0.847 -0.077 1.000 13177.665 11137.261 log_lik[29] -0.357 -0.316 0.220 0.200 -0.774 -0.077 1.000 14934.167 11148.846 log_lik[30] -0.359 -0.318 0.221 0.201 -0.784 -0.078 1.000 15170.517 11293.985 log_lik[31] -0.360 -0.318 0.221 0.203 -0.783 -0.079 1.000 14403.235 10852.756 log_lik[32] -0.358 -0.320 0.218 0.202 -0.767 -0.078 1.000 14342.247 10523.368 log_lik[33] -0.362 -0.320 0.224 0.206 -0.787 -0.078 1.000 14053.106 10307.949 log_lik[34] -0.355 -0.313 0.219 0.201 -0.776 -0.077 1.000 13740.653 12239.100 log_lik[35] -1.621 -1.586 0.579 0.577 -2.630 -0.740 1.000 13806.207 10836.735 log_lik[36] -0.251 -0.168 0.259 0.173 -0.777 -0.014 1.000 13447.237 13138.915 log_lik[37] -0.445 -0.405 0.251 0.233 -0.913 -0.114 1.000 14425.019 10429.839 log_lik[38] -27.733 -27.521 3.326 3.229 -33.498 -22.568 1.001 16291.400 11599.115 log_lik[39] -18.396 -18.309 2.268 2.245 -22.254 -14.834 1.000 14406.124 13412.397 log_lik[40] -0.356 -0.317 0.218 0.200 -0.775 -0.078 1.000 14463.341 11377.798 log_lik[41] -0.360 -0.317 0.223 0.205 -0.788 -0.079 1.000 14691.283 11903.549 log_lik[42] -0.925 -0.720 0.777 0.647 -2.451 -0.088 1.000 10908.717 12426.532 log_lik[43] -1.483 -1.365 0.826 0.830 -3.010 -0.345 1.000 12441.906 13126.003 log_lik[44] -2.413 -2.382 0.485 0.482 -3.249 -1.670 1.000 15959.879 10663.086 log_lik[45] -0.387 -0.339 0.246 0.227 -0.863 -0.077 1.000 14648.790 11935.296 log_lik[46] -1.285 -1.230 0.644 0.658 -2.444 -0.349 1.000 11726.336 11576.301 log_lik[47] -0.252 -0.169 0.261 0.173 -0.774 -0.014 1.000 13232.610 13854.753 log_lik[48] -0.325 -0.248 0.281 0.227 -0.880 -0.028 1.000 13126.784 11634.569 log_lik[49] -1.156 -1.055 0.263 0.121 -1.681 -0.967 1.000 14323.182 14272.969 log_lik[50] -1.085 -1.019 0.172 0.072 -1.428 -0.966 1.000 12741.558 14449.931 log_lik[51] -1.080 -1.016 0.166 0.068 -1.407 -0.966 1.000 12616.702 15261.056 log_lik[52] -1.134 -1.060 0.209 0.124 -1.556 -0.967 1.000 14609.791 13121.389 log_lik[53] -1.198 -1.116 0.251 0.186 -1.705 -0.968 1.000 15904.399 12316.965 log_lik[54] -1.198 -1.115 0.252 0.182 -1.704 -0.968 1.000 15267.392 11500.676 log_lik[55] -1.194 -1.113 0.248 0.181 -1.711 -0.968 1.000 16241.439 12420.130 log_lik[56] -1.192 -1.111 0.247 0.179 -1.686 -0.968 1.000 15886.428 11072.242 log_lik[57] -1.195 -1.112 0.255 0.181 -1.705 -0.968 1.000 14367.608 11654.161 log_lik[58] -1.200 -1.122 0.251 0.192 -1.705 -0.968 1.000 12243.827 11220.190 log_lik[59] -1.548 -1.481 0.369 0.340 -2.252 -1.075 1.000 15232.421 11947.585 log_lik[60] -1.102 -1.027 0.193 0.084 -1.485 -0.966 1.000 12020.243 13909.915 log_lik[61] -2.242 -2.132 0.626 0.580 -3.426 -1.430 1.000 17021.061 10703.956 log_lik[62] -2.313 -2.252 0.552 0.537 -3.298 -1.520 1.000 15989.226 12360.901 log_lik[63] -4.495 -4.436 0.870 0.858 -6.047 -3.185 1.000 15219.577 13630.151 log_lik[64] -1.195 -1.116 0.248 0.184 -1.694 -0.968 1.000 16163.718 12366.782 log_lik[65] -1.199 -1.120 0.252 0.187 -1.704 -0.968 1.000 14106.340 10711.257 log_lik[66] -1.620 -1.465 0.443 0.298 -2.530 -1.238 1.000 15055.363 15028.610 log_lik[67] -1.810 -1.682 0.383 0.256 -2.576 -1.482 1.000 15024.354 14748.402 log_lik[68] -2.246 -2.213 0.466 0.463 -3.053 -1.542 1.000 16155.033 10272.808 log_lik[69] -1.138 -1.062 0.209 0.127 -1.564 -0.967 1.000 15255.444 12726.826 log_lik[70] -1.566 -1.494 0.410 0.387 -2.341 -1.034 1.000 15129.157 13376.533 log_lik[71] -1.104 -1.030 0.192 0.087 -1.494 -0.966 1.000 12105.633 13822.537 log_lik[72] -1.085 -1.021 0.170 0.075 -1.434 -0.966 1.000 13071.650 14619.665 log_lik[73] 0.000 0.000 0.000 0.000 0.000 0.000 1.000 17690.774 12743.676 log_lik[74] -0.002 0.000 0.014 0.000 -0.009 0.000 1.000 12781.810 9112.860 log_lik[75] -0.004 0.000 0.019 0.000 -0.016 0.000 1.000 13749.907 8875.297 log_lik[76] -0.019 -0.003 0.042 0.004 -0.095 0.000 1.000 10685.164 10392.092 log_lik[77] -0.021 -0.005 0.041 0.007 -0.100 0.000 1.000 13825.370 13573.655 log_lik[78] -0.021 -0.005 0.043 0.007 -0.099 0.000 1.001 13954.001 12558.545 log_lik[79] -0.022 -0.005 0.044 0.007 -0.104 0.000 1.000 11942.325 11556.591 log_lik[80] -0.021 -0.005 0.041 0.007 -0.100 0.000 1.000 12060.601 11763.253 log_lik[81] -0.022 -0.005 0.043 0.007 -0.104 0.000 1.000 11357.295 13261.261 log_lik[82] -0.021 -0.004 0.040 0.007 -0.097 0.000 1.000 13160.016 12406.203 log_lik[83] -0.116 -0.052 0.164 0.070 -0.457 -0.001 1.000 15328.836 12249.895 log_lik[84] 0.000 0.000 0.003 0.000 -0.001 0.000 1.000 17032.001 12134.934 log_lik[85] -0.029 -0.008 0.053 0.011 -0.131 0.000 1.000 12079.453 11677.401 log_lik[86] -0.252 -0.145 0.300 0.182 -0.862 -0.003 1.000 14782.706 12597.547 log_lik[87] -0.975 -0.826 0.713 0.661 -2.351 -0.115 1.000 15337.603 11721.395 log_lik[88] -0.021 -0.004 0.041 0.006 -0.100 0.000 1.001 13474.954 13338.419 log_lik[89] -0.022 -0.005 0.044 0.007 -0.104 0.000 1.000 13044.160 12678.846 log_lik[90] -0.002 0.000 0.015 0.000 -0.006 0.000 1.000 15142.806 12143.325 log_lik[91] -0.020 -0.001 0.061 0.002 -0.103 0.000 1.000 14009.916 12692.112 log_lik[92] -4.144 -4.057 0.935 0.885 -5.833 -2.804 1.000 17383.695 13081.116 log_lik[93] -0.019 -0.003 0.043 0.004 -0.095 0.000 1.000 11999.509 11357.071 log_lik[94] -0.036 -0.004 0.085 0.007 -0.189 0.000 1.000 12135.284 10552.876 log_lik[95] 0.000 0.000 0.004 0.000 -0.001 0.000 1.000 15148.218 11894.131 log_lik[96] -0.002 0.000 0.014 0.000 -0.008 0.000 1.000 14669.357 10444.588 log_lik[97] 0.000 0.000 0.001 0.000 0.000 0.000 1.000 17274.615 11046.753 log_lik[98] -0.002 0.000 0.014 0.000 -0.009 0.000 1.000 13836.779 9913.641 log_lik[99] -0.004 0.000 0.019 0.000 -0.016 0.000 1.000 13434.226 10490.413 log_lik[100] -0.019 -0.003 0.042 0.004 -0.092 0.000 1.000 11824.985 12405.687 log_lik[101] -0.022 -0.004 0.042 0.007 -0.104 0.000 1.000 14015.365 11322.966 log_lik[102] -0.021 -0.005 0.043 0.007 -0.102 0.000 1.000 14401.517 12392.244 log_lik[103] -0.022 -0.005 0.043 0.007 -0.103 0.000 1.000 11986.469 11703.865 log_lik[104] -0.021 -0.005 0.043 0.007 -0.101 0.000 1.000 11896.757 12491.210 log_lik[105] -0.022 -0.005 0.043 0.007 -0.102 0.000 1.000 11524.579 13473.130 log_lik[106] -0.021 -0.004 0.042 0.006 -0.096 0.000 1.000 13408.332 12310.407 log_lik[107] -0.117 -0.051 0.165 0.070 -0.460 -0.001 1.000 15796.189 12418.299 log_lik[108] 0.000 0.000 0.004 0.000 -0.001 0.000 1.000 16657.367 11883.897 log_lik[109] -0.029 -0.007 0.054 0.011 -0.133 0.000 1.000 12099.583 11585.796 log_lik[110] -0.251 -0.145 0.293 0.183 -0.869 -0.003 1.000 14396.345 12410.315 log_lik[111] -0.975 -0.818 0.724 0.669 -2.382 -0.108 1.000 15538.143 12726.419 log_lik[112] -0.021 -0.004 0.043 0.007 -0.100 0.000 1.000 13724.005 12602.863 log_lik[113] -0.022 -0.005 0.043 0.007 -0.103 0.000 1.000 12934.974 12014.421 log_lik[114] -0.002 0.000 0.017 0.000 -0.006 0.000 1.000 15164.169 11302.651 log_lik[115] -0.020 -0.001 0.061 0.001 -0.106 0.000 1.000 14338.326 12244.711 log_lik[116] -4.157 -4.050 0.952 0.897 -5.873 -2.799 1.000 19083.257 12793.528 log_lik[117] -0.019 -0.003 0.042 0.004 -0.092 0.000 1.000 12431.922 10741.132 log_lik[118] -0.037 -0.004 0.089 0.006 -0.186 0.000 1.000 11747.641 10332.663 log_lik[119] 0.000 0.000 0.003 0.000 -0.001 0.000 1.000 16276.733 11828.375 log_lik[120] -0.002 0.000 0.013 0.000 -0.008 0.000 1.000 15059.042 9800.393 log_lik[121] 0.000 0.000 0.000 0.000 0.000 0.000 1.000 15876.505 12484.944 log_lik[122] -0.002 0.000 0.014 0.000 -0.008 0.000 1.000 13355.111 10136.238 log_lik[123] -0.004 0.000 0.018 0.000 -0.017 0.000 1.001 11841.831 9991.545 log_lik[124] -0.019 -0.003 0.042 0.004 -0.094 0.000 1.000 11232.363 11217.331 log_lik[125] -0.021 -0.005 0.041 0.007 -0.101 0.000 1.000 13770.827 11512.138 log_lik[126] -0.021 -0.005 0.042 0.007 -0.098 0.000 1.001 13216.993 12357.252 log_lik[127] -0.022 -0.005 0.044 0.007 -0.104 0.000 1.000 11956.035 11664.649 log_lik[128] -0.021 -0.005 0.043 0.007 -0.098 0.000 1.000 11855.218 11048.371 log_lik[129] -0.022 -0.005 0.042 0.007 -0.099 0.000 1.001 10586.637 12431.001 log_lik[130] -0.021 -0.004 0.041 0.006 -0.098 0.000 1.000 12849.436 12761.098 log_lik[131] -0.118 -0.051 0.166 0.070 -0.461 0.000 1.000 15164.102 12209.459 log_lik[132] 0.000 0.000 0.003 0.000 -0.001 0.000 1.000 15979.121 11822.867 log_lik[133] -0.028 -0.007 0.051 0.011 -0.129 0.000 1.000 11691.501 11070.222 log_lik[134] -0.250 -0.145 0.293 0.181 -0.863 -0.003 1.000 15012.863 12300.522 log_lik[135] -0.977 -0.823 0.720 0.678 -2.385 -0.110 1.000 16303.950 12223.399 log_lik[136] -0.021 -0.004 0.042 0.006 -0.100 0.000 1.000 13608.412 13074.322 log_lik[137] -0.022 -0.005 0.043 0.007 -0.108 0.000 1.000 13119.020 12479.510 log_lik[138] -0.002 0.000 0.015 0.000 -0.006 0.000 1.000 14615.551 11729.399 log_lik[139] -0.020 -0.001 0.061 0.002 -0.105 0.000 1.000 13679.495 12016.091 log_lik[140] -4.149 -4.050 0.947 0.907 -5.821 -2.811 1.000 18524.403 12092.270 log_lik[141] -0.019 -0.003 0.043 0.004 -0.094 0.000 1.000 12346.825 10966.236 log_lik[142] -0.037 -0.004 0.088 0.006 -0.188 0.000 1.000 11747.001 10732.603 log_lik[143] 0.000 0.000 0.005 0.000 -0.001 0.000 1.000 16238.104 13018.049 log_lik[144] -0.002 0.000 0.012 0.000 -0.007 0.000 1.000 14617.327 10464.754 log_lik[145] 0.000 0.000 0.000 0.000 0.000 0.000 1.000 16447.716 11785.802 log_lik[146] -0.002 0.000 0.015 0.000 -0.009 0.000 1.000 13397.636 9607.827 log_lik[147] -0.004 0.000 0.019 0.000 -0.016 0.000 1.001 13399.621 9161.710 log_lik[148] -0.019 -0.003 0.043 0.004 -0.097 0.000 1.000 11618.893 12026.035 log_lik[149] -0.022 -0.005 0.042 0.007 -0.103 0.000 1.000 13830.887 12829.356 log_lik[150] -0.022 -0.005 0.044 0.007 -0.102 0.000 1.001 13768.729 12014.202 log_lik[151] -0.022 -0.005 0.043 0.007 -0.104 0.000 1.000 11975.581 12257.203 log_lik[152] -0.021 -0.005 0.042 0.007 -0.101 0.000 1.000 11725.892 11049.502 log_lik[153] -0.022 -0.005 0.044 0.007 -0.105 0.000 1.000 11148.210 12367.866 log_lik[154] -0.021 -0.004 0.041 0.007 -0.097 0.000 1.000 12804.026 12055.903 log_lik[155] -0.118 -0.052 0.167 0.070 -0.456 -0.001 1.000 14603.253 12633.935 log_lik[156] 0.000 0.000 0.003 0.000 -0.001 0.000 1.000 15663.365 12080.715 log_lik[157] -0.029 -0.008 0.055 0.011 -0.130 0.000 1.000 11315.431 11736.185 log_lik[158] -0.251 -0.144 0.297 0.180 -0.864 -0.003 1.000 15481.205 12293.748 log_lik[159] -0.980 -0.816 0.732 0.684 -2.401 -0.107 1.000 16633.253 12257.360 log_lik[160] -0.022 -0.004 0.043 0.006 -0.102 0.000 1.000 14002.406 12589.512 log_lik[161] -0.022 -0.005 0.045 0.007 -0.106 0.000 1.000 13203.733 13358.438 log_lik[162] -0.002 0.000 0.014 0.000 -0.006 0.000 1.000 14170.115 11747.933 log_lik[163] -0.021 -0.001 0.063 0.002 -0.109 0.000 1.000 13331.610 12069.524 log_lik[164] -4.154 -4.051 0.952 0.901 -5.866 -2.793 1.000 19225.078 12741.596 log_lik[165] -0.019 -0.002 0.045 0.004 -0.093 0.000 1.000 12013.582 11279.671 log_lik[166] -0.037 -0.004 0.090 0.006 -0.190 0.000 1.000 11565.201 11014.378 log_lik[167] 0.000 0.000 0.003 0.000 -0.001 0.000 1.000 15743.851 11428.348 log_lik[168] -0.002 0.000 0.012 0.000 -0.008 0.000 1.000 14230.213 11030.866 log_lik[169] -0.014 -0.002 0.037 0.003 -0.067 0.000 1.000 11668.662 11337.891 log_lik[170] -0.095 -0.043 0.137 0.056 -0.370 -0.001 1.000 11836.818 10734.258 log_lik[171] -0.113 -0.058 0.147 0.072 -0.416 -0.002 1.000 11693.286 10705.345 log_lik[172] -0.193 -0.145 0.171 0.141 -0.538 -0.012 1.000 11472.126 12451.439 log_lik[173] -0.189 -0.148 0.158 0.134 -0.502 -0.015 1.000 13578.019 12469.750 log_lik[174] -0.190 -0.149 0.159 0.135 -0.501 -0.015 1.000 13204.945 11861.167 log_lik[175] -0.190 -0.151 0.161 0.135 -0.506 -0.016 1.000 13149.979 10280.868 log_lik[176] -0.189 -0.149 0.158 0.134 -0.497 -0.015 1.000 12422.493 12149.944 log_lik[177] -0.192 -0.151 0.161 0.138 -0.511 -0.014 1.000 12072.730 12329.449 log_lik[178] -0.187 -0.146 0.157 0.133 -0.499 -0.014 1.000 12781.801 12311.126 log_lik[179] -0.929 -0.877 0.497 0.508 -1.821 -0.216 1.000 12894.711 12748.628 log_lik[180] -0.048 -0.016 0.085 0.022 -0.202 0.000 1.000 12908.838 12274.584 log_lik[181] -0.241 -0.199 0.187 0.167 -0.601 -0.025 1.000 12398.808 12724.427 log_lik[182] -1.599 -1.559 0.681 0.694 -2.779 -0.549 1.000 16191.253 13608.028 log_lik[183] -22.456 -22.284 2.905 2.828 -27.490 -17.990 1.000 16129.223 13285.501 log_lik[184] -0.188 -0.149 0.157 0.135 -0.500 -0.015 1.000 13089.548 12117.470 log_lik[185] -0.192 -0.149 0.163 0.136 -0.514 -0.016 1.000 13412.575 12354.471 log_lik[186] -0.191 -0.087 0.280 0.114 -0.746 -0.002 1.000 11907.906 12965.773 log_lik[187] -0.542 -0.400 0.498 0.406 -1.556 -0.030 1.000 12343.682 12861.985 log_lik[188] -2.662 -2.628 0.520 0.520 -3.564 -1.872 1.000 15998.920 11103.456 log_lik[189] -0.191 -0.144 0.173 0.141 -0.532 -0.011 1.000 13015.151 10294.744 log_lik[190] -0.565 -0.459 0.449 0.416 -1.440 -0.045 1.000 11634.562 12210.756 log_lik[191] -0.048 -0.016 0.083 0.022 -0.205 0.000 1.000 12707.209 12783.356 log_lik[192] -0.092 -0.042 0.132 0.054 -0.353 -0.001 1.000 12216.765 11074.873 log_lik[193] -3.270 -2.842 2.086 1.884 -7.294 -0.697 1.000 15400.134 13536.876 log_lik[194] -2.340 -1.995 0.937 0.559 -4.239 -1.581 1.001 10599.473 10203.854 log_lik[195] -1.494 -1.357 0.362 0.165 -2.195 -1.237 1.000 11183.555 11552.848 log_lik[196] -1.229 -1.066 0.422 0.139 -2.051 -0.967 1.000 15428.311 13912.785 log_lik[197] -1.231 -1.070 0.420 0.144 -2.028 -0.967 1.000 15365.456 15466.543 log_lik[198] -1.229 -1.070 0.420 0.145 -2.014 -0.967 1.000 15770.371 15688.216 log_lik[199] -1.238 -1.074 0.433 0.149 -2.065 -0.967 1.000 14892.932 15164.326 log_lik[200] -1.224 -1.069 0.409 0.142 -2.022 -0.967 1.000 14311.819 15153.159 log_lik[201] -2.549 -2.117 1.198 0.761 -5.017 -1.546 1.000 15078.044 12160.199 log_lik[202] -1.306 -1.120 0.482 0.212 -2.269 -0.967 1.000 15653.479 16183.622 log_lik[203] -2.792 -2.602 0.951 0.954 -4.619 -1.628 1.000 10857.281 12248.048 log_lik[204] -5.121 -5.019 1.464 1.461 -7.664 -2.894 1.000 11258.310 11154.457 log_lik[205] -1.235 -1.071 0.427 0.145 -2.054 -0.967 1.000 16082.781 15970.773 log_lik[206] -3.275 -2.789 1.662 1.397 -6.623 -1.597 1.000 16839.263 14712.225 log_lik[207] -4.425 -3.997 2.130 1.969 -8.481 -1.813 1.000 14783.475 11109.885 log_lik[208] -1.498 -1.360 0.376 0.169 -2.206 -1.237 1.001 10073.065 12310.491 log_lik[209] -5.639 -5.254 2.360 2.209 -10.098 -2.549 1.000 11538.412 9337.488 log_lik[210] -2.560 -2.112 1.227 0.756 -5.062 -1.546 1.000 13683.805 12644.293 log_lik[211] -2.422 -2.027 1.037 0.577 -4.603 -1.598 1.000 11590.246 10638.371 log_lik[212] -1.230 -1.068 0.430 0.141 -2.008 -0.967 1.000 16765.919 15645.069 log_lik[213] -3.476 -3.208 1.379 1.217 -6.071 -1.767 1.000 13878.628 10851.307 log_lik[214] -1.230 -1.071 0.424 0.145 -2.031 -0.967 1.000 13961.538 15410.973 log_lik[215] -2.002 -1.970 0.449 0.446 -2.788 -1.329 1.000 15791.243 10473.451 log_lik[216] -2.453 -2.058 1.059 0.621 -4.662 -1.598 1.000 10196.799 9148.821 log_lik[217] -1.360 -1.201 0.456 0.304 -2.294 -0.968 1.000 15336.706 13339.345 log_lik[218] -1.171 -1.068 0.271 0.137 -1.728 -0.967 1.000 14722.152 15292.105 log_lik[219] -1.164 -1.063 0.261 0.131 -1.705 -0.967 1.000 15182.353 15009.661 log_lik[220] -1.204 -1.119 0.265 0.189 -1.728 -0.968 1.000 16706.370 13561.169 log_lik[221] -1.272 -1.186 0.301 0.246 -1.866 -0.971 1.000 16470.895 12190.951 log_lik[222] -1.270 -1.184 0.301 0.243 -1.865 -0.970 1.000 16778.296 12176.613 log_lik[223] -1.266 -1.181 0.296 0.241 -1.859 -0.970 1.000 16214.207 12343.751 log_lik[224] -1.265 -1.181 0.292 0.239 -1.844 -0.971 1.000 16815.869 12063.194 log_lik[225] -1.267 -1.181 0.302 0.242 -1.871 -0.970 1.000 15239.651 12550.916 log_lik[226] -1.274 -1.191 0.301 0.250 -1.873 -0.970 1.000 14894.098 11586.352 log_lik[227] -1.410 -1.349 0.320 0.294 -2.025 -1.011 1.000 15722.899 12220.363 log_lik[228] -1.215 -1.093 0.320 0.171 -1.865 -0.967 1.000 15517.280 15018.785 log_lik[229] -1.164 -1.088 0.226 0.155 -1.624 -0.967 1.000 16311.404 13002.878 log_lik[230] -2.091 -2.034 0.508 0.502 -3.004 -1.367 1.000 15087.399 12582.072 log_lik[231] -4.202 -4.141 0.816 0.803 -5.655 -2.977 1.000 15843.187 13571.978 log_lik[232] -1.269 -1.182 0.299 0.241 -1.853 -0.971 1.000 16090.271 13256.601 log_lik[233] -1.272 -1.187 0.300 0.245 -1.865 -0.970 1.000 16446.468 12132.391 log_lik[234] -1.560 -1.390 0.590 0.497 -2.733 -0.972 1.000 13694.452 14063.809 log_lik[235] -1.705 -1.612 0.533 0.524 -2.713 -1.022 1.000 14641.429 12527.715 log_lik[236] -25.136 -25.018 2.653 2.657 -29.660 -21.044 1.000 16246.664 10648.106 log_lik[237] -1.210 -1.124 0.267 0.197 -1.755 -0.968 1.000 16602.530 13724.226 log_lik[238] -1.363 -1.290 0.338 0.312 -2.017 -0.976 1.000 14552.386 11260.930 log_lik[239] -1.217 -1.095 0.321 0.174 -1.885 -0.967 1.000 15174.744 12835.872 log_lik[240] -1.174 -1.071 0.272 0.141 -1.739 -0.967 1.000 17149.653 14384.517 log_lik[241] -1.357 -1.202 0.452 0.308 -2.272 -0.968 1.000 16284.215 13724.846 log_lik[242] -1.169 -1.068 0.270 0.137 -1.713 -0.967 1.000 15908.377 14528.182 log_lik[243] -1.164 -1.063 0.264 0.131 -1.703 -0.967 1.000 16321.032 15182.984 log_lik[244] -1.204 -1.120 0.264 0.190 -1.731 -0.968 1.000 16290.884 13075.762 log_lik[245] -1.273 -1.186 0.303 0.246 -1.878 -0.970 1.000 16784.071 13279.531 log_lik[246] -1.270 -1.185 0.302 0.243 -1.872 -0.971 1.000 16764.377 12232.023 log_lik[247] -1.266 -1.181 0.295 0.241 -1.854 -0.971 1.000 16415.373 13153.857 log_lik[248] -1.266 -1.181 0.295 0.239 -1.846 -0.970 1.000 16996.080 12013.693 log_lik[249] -1.267 -1.180 0.303 0.241 -1.867 -0.970 1.000 14927.379 12698.845 log_lik[250] -1.274 -1.192 0.300 0.251 -1.872 -0.971 1.000 14800.851 12680.356 log_lik[251] -1.411 -1.348 0.322 0.291 -2.028 -1.011 1.001 15599.142 11945.746 log_lik[252] -1.214 -1.093 0.317 0.171 -1.861 -0.967 1.000 16966.500 13903.612 log_lik[253] -1.165 -1.087 0.228 0.153 -1.624 -0.968 1.000 16071.051 12414.720 log_lik[254] -2.091 -2.034 0.506 0.494 -3.017 -1.366 1.000 14842.899 13053.103 log_lik[255] -4.202 -4.148 0.815 0.803 -5.647 -2.973 1.000 15275.197 12347.530 log_lik[256] -1.269 -1.184 0.297 0.242 -1.853 -0.970 1.000 16616.381 12944.198 log_lik[257] -1.271 -1.186 0.301 0.244 -1.864 -0.970 1.000 16482.023 12200.339 log_lik[258] -1.561 -1.393 0.582 0.497 -2.725 -0.972 1.000 13744.478 13401.611 log_lik[259] -1.706 -1.611 0.536 0.518 -2.723 -1.017 1.000 14929.013 12662.863 log_lik[260] -25.136 -25.017 2.652 2.655 -29.651 -21.033 1.000 16245.201 10315.354 log_lik[261] -1.209 -1.121 0.265 0.193 -1.741 -0.968 1.000 16575.356 13168.828 log_lik[262] -1.363 -1.287 0.340 0.312 -2.024 -0.975 1.000 14351.586 12462.954 log_lik[263] -1.216 -1.095 0.319 0.174 -1.868 -0.967 1.000 16827.711 14985.856 log_lik[264] -1.174 -1.071 0.270 0.142 -1.729 -0.967 1.000 16724.418 14234.159 log_lik[265] -1.170 -1.058 0.294 0.126 -1.743 -0.967 1.000 13552.975 13472.087 log_lik[266] -1.078 -1.016 0.160 0.068 -1.398 -0.966 1.000 11791.716 13966.351 log_lik[267] -1.073 -1.013 0.156 0.065 -1.382 -0.966 1.000 12137.705 13422.825 log_lik[268] -1.121 -1.050 0.196 0.112 -1.516 -0.967 1.000 13894.423 12108.098 log_lik[269] -1.184 -1.103 0.243 0.173 -1.668 -0.967 1.000 15353.170 11416.777 log_lik[270] -1.183 -1.103 0.244 0.171 -1.671 -0.968 1.000 15408.175 11363.060 log_lik[271] -1.180 -1.100 0.238 0.169 -1.672 -0.967 1.000 15486.284 11822.218 log_lik[272] -1.178 -1.100 0.236 0.167 -1.655 -0.967 1.000 15545.101 10937.479 log_lik[273] -1.181 -1.100 0.245 0.170 -1.674 -0.967 1.000 14436.633 11150.949 log_lik[274] -1.186 -1.109 0.241 0.180 -1.668 -0.968 1.001 12861.635 10389.764 log_lik[275] -27.897 -27.799 3.493 3.491 -33.845 -22.425 1.000 15172.860 10870.257 log_lik[276] -1.104 -1.029 0.194 0.086 -1.498 -0.966 1.000 11907.603 12445.750 log_lik[277] -1.103 -1.037 0.177 0.095 -1.461 -0.967 1.000 12693.695 11209.644 log_lik[278] -2.368 -2.305 0.571 0.551 -3.405 -1.560 1.000 15753.864 11905.611 log_lik[279] -4.563 -4.500 0.885 0.860 -6.142 -3.248 1.000 15369.528 13278.739 log_lik[280] -1.181 -1.101 0.238 0.170 -1.661 -0.968 1.000 15491.722 11270.508 log_lik[281] -1.186 -1.105 0.244 0.175 -1.672 -0.968 1.000 14277.398 11433.065 log_lik[282] -2.306 -2.153 0.912 0.888 -4.014 -1.109 1.000 15304.346 14147.318 log_lik[283] -2.201 -2.104 0.684 0.662 -3.441 -1.241 1.000 15392.328 13699.914 log_lik[284] -2.237 -2.206 0.465 0.461 -3.040 -1.532 1.000 16288.504 10540.535 log_lik[285] -1.125 -1.053 0.196 0.116 -1.531 -0.967 1.000 14454.087 12455.263 log_lik[286] -1.621 -1.549 0.444 0.417 -2.455 -1.045 1.000 15385.317 13350.153 log_lik[287] -1.102 -1.026 0.195 0.082 -1.491 -0.966 1.000 12320.894 12197.007 log_lik[288] -1.077 -1.015 0.159 0.067 -1.389 -0.966 1.000 13199.990 12861.615 log_lik[289] 0.000 0.000 0.000 0.000 0.000 0.000 1.000 18951.539 11233.086 log_lik[290] -0.003 0.000 0.015 0.000 -0.009 0.000 1.000 14080.203 9724.386 log_lik[291] -0.004 0.000 0.019 0.000 -0.016 0.000 1.000 13434.771 9094.618 log_lik[292] -0.019 -0.003 0.041 0.004 -0.094 0.000 1.000 11768.482 12475.518 log_lik[293] -0.022 -0.005 0.042 0.007 -0.104 0.000 1.000 14001.707 12938.107 log_lik[294] -0.022 -0.005 0.045 0.007 -0.101 0.000 1.000 13825.339 12784.585 log_lik[295] -0.022 -0.005 0.044 0.007 -0.102 0.000 1.000 12375.042 12077.979 log_lik[296] -0.021 -0.004 0.042 0.007 -0.102 0.000 1.000 11892.290 11576.066 log_lik[297] -0.022 -0.005 0.043 0.007 -0.102 0.000 1.000 11938.263 11947.397 log_lik[298] -0.021 -0.004 0.042 0.006 -0.098 0.000 1.000 13022.501 12585.453 log_lik[299] -0.117 -0.051 0.166 0.069 -0.461 -0.001 1.000 15481.246 13086.744 log_lik[300] 0.000 0.000 0.004 0.000 -0.001 0.000 1.000 17364.516 12521.307 log_lik[301] -0.029 -0.007 0.053 0.011 -0.128 0.000 1.000 12413.795 12049.031 log_lik[302] -0.251 -0.144 0.296 0.178 -0.877 -0.003 1.000 15028.209 12629.429 log_lik[303] -0.975 -0.813 0.729 0.673 -2.413 -0.108 1.000 15810.050 12804.712 log_lik[304] -0.021 -0.004 0.041 0.007 -0.102 0.000 1.000 13282.857 12584.613 log_lik[305] -0.022 -0.005 0.043 0.007 -0.102 0.000 1.000 12587.724 12402.914 log_lik[306] -0.002 0.000 0.011 0.000 -0.006 0.000 1.000 15278.582 12228.525 log_lik[307] -0.021 -0.001 0.069 0.002 -0.114 0.000 1.000 14435.840 12200.347 log_lik[308] -4.155 -4.043 0.949 0.893 -5.849 -2.803 1.000 20059.180 13406.285 log_lik[309] -0.019 -0.003 0.044 0.004 -0.094 0.000 1.000 12547.565 10139.392 log_lik[310] -0.036 -0.004 0.085 0.006 -0.186 0.000 1.000 12331.316 10311.541 log_lik[311] 0.000 0.000 0.003 0.000 -0.001 0.000 1.000 16666.824 12501.215 log_lik[312] -0.002 0.000 0.012 0.000 -0.008 0.000 1.000 15413.676 10949.520 y_rep[1] 3.304 3.000 2.115 1.483 0.000 7.000 1.000 14657.242 14151.390 y_rep[2] 1.783 2.000 1.406 1.483 0.000 4.000 1.000 15429.586 15222.625 y_rep[3] 1.620 1.000 1.347 1.483 0.000 4.000 1.000 15235.904 15082.143 y_rep[4] 0.969 1.000 1.032 1.483 0.000 3.000 1.000 16141.110 15489.123 y_rep[5] 0.816 1.000 0.948 1.483 0.000 3.000 1.000 15786.146 15636.001 y_rep[6] 0.816 1.000 0.946 1.483 0.000 3.000 1.000 16236.412 14035.550 y_rep[7] 0.817 1.000 0.944 1.483 0.000 3.000 1.000 15974.625 15946.834 y_rep[8] 0.826 1.000 0.954 1.483 0.000 3.000 1.000 15967.972 15487.966 y_rep[9] 0.825 1.000 0.950 1.483 0.000 3.000 1.000 15131.892 15594.603 y_rep[10] 0.815 1.000 0.945 1.483 0.000 3.000 1.000 15831.592 15632.238 y_rep[11] 2.882 3.000 1.670 1.483 0.000 6.000 1.000 15343.179 14928.921 y_rep[12] 2.259 2.000 1.639 1.483 0.000 5.000 1.000 14879.745 15241.444 y_rep[13] 0.962 1.000 1.026 1.483 0.000 3.000 1.000 15681.503 15574.376 y_rep[14] 3.919 4.000 1.859 1.483 1.000 7.000 1.000 15134.501 14753.406 y_rep[15] 5.842 6.000 2.033 1.483 3.000 9.000 1.000 15159.670 14807.470 y_rep[16] 0.824 1.000 0.950 1.483 0.000 3.000 1.000 16400.212 15766.935 y_rep[17] 0.817 1.000 0.948 1.483 0.000 3.000 1.000 15898.834 15843.886 y_rep[18] 5.865 6.000 2.467 2.965 2.000 10.000 1.000 14705.073 15471.580 y_rep[19] 4.646 4.000 2.106 1.483 1.000 8.000 1.000 14568.699 14249.947 y_rep[20] 13.021 13.000 1.377 1.483 11.000 15.000 1.000 16224.723 NA y_rep[21] 0.965 1.000 1.032 1.483 0.000 3.000 1.000 16429.221 15198.075 y_rep[22] 3.427 3.000 1.838 1.483 1.000 7.000 1.000 15176.752 15602.761 y_rep[23] 2.274 2.000 1.662 1.483 0.000 5.000 1.000 14773.383 15552.154 y_rep[24] 1.775 2.000 1.432 1.483 0.000 4.000 1.000 15610.421 15257.839 y_rep[25] 0.140 0.000 0.421 0.000 0.000 1.000 1.000 15442.406 15167.361 y_rep[26] 0.322 0.000 0.625 0.000 0.000 2.000 1.000 14776.688 15179.598 y_rep[27] 0.348 0.000 0.634 0.000 0.000 2.000 1.000 15073.712 14632.811 y_rep[28] 0.387 0.000 0.650 0.000 0.000 2.000 1.000 15306.100 15680.090 y_rep[29] 0.356 0.000 0.621 0.000 0.000 2.000 1.000 15915.590 15836.701 y_rep[30] 0.354 0.000 0.622 0.000 0.000 2.000 1.000 15330.254 15464.610 y_rep[31] 0.355 0.000 0.619 0.000 0.000 2.000 1.000 15898.526 15819.259 y_rep[32] 0.357 0.000 0.622 0.000 0.000 2.000 1.000 16143.439 15863.257 y_rep[33] 0.360 0.000 0.628 0.000 0.000 2.000 1.000 16340.412 15367.249 y_rep[34] 0.353 0.000 0.619 0.000 0.000 2.000 1.000 15873.297 15714.393 y_rep[35] 1.516 1.000 1.262 1.483 0.000 4.000 1.000 14783.550 15487.446 y_rep[36] 0.249 0.000 0.550 0.000 0.000 1.000 1.000 15212.427 14718.265 y_rep[37] 0.432 0.000 0.680 0.000 0.000 2.000 1.000 15713.949 14798.870 y_rep[38] 2.418 2.000 1.515 1.483 0.000 5.000 1.000 15692.645 15669.225 y_rep[39] 4.463 4.000 1.877 1.483 2.000 8.000 1.000 16277.968 15363.987 y_rep[40] 0.356 0.000 0.624 0.000 0.000 2.000 1.000 15765.583 16116.022 y_rep[41] 0.356 0.000 0.628 0.000 0.000 2.000 1.000 15824.184 15728.667 y_rep[42] 0.882 1.000 1.146 1.483 0.000 3.000 1.000 13752.758 14065.510 y_rep[43] 1.407 1.000 1.345 1.483 0.000 4.000 1.000 14043.527 14447.818 y_rep[44] 12.783 13.000 1.425 1.483 10.000 15.000 1.000 15866.263 NA y_rep[45] 0.383 0.000 0.657 0.000 0.000 2.000 1.000 15562.156 15602.054 y_rep[46] 1.226 1.000 1.202 1.483 0.000 4.000 1.000 14755.305 15234.688 y_rep[47] 0.249 0.000 0.554 0.000 0.000 1.000 1.000 14864.786 14992.089 y_rep[48] 0.322 0.000 0.617 0.000 0.000 2.000 1.000 15234.631 15183.331 y_rep[49] 1.010 1.000 1.124 1.483 0.000 3.000 1.000 16634.963 15983.338 y_rep[50] 0.942 1.000 1.039 1.483 0.000 3.000 1.000 15976.386 15802.651 y_rep[51] 0.903 1.000 1.002 1.483 0.000 3.000 1.000 16468.875 15460.957 y_rep[52] 0.684 0.000 0.856 0.000 0.000 2.000 1.000 14663.321 15120.445 y_rep[53] 0.581 0.000 0.793 0.000 0.000 2.000 1.000 16053.572 15209.053 y_rep[54] 0.599 0.000 0.811 0.000 0.000 2.000 1.000 16100.040 15551.434 y_rep[55] 0.602 0.000 0.806 0.000 0.000 2.000 1.000 15948.701 15755.704 y_rep[56] 0.606 0.000 0.810 0.000 0.000 2.000 1.000 16147.382 15835.003 y_rep[57] 0.613 0.000 0.816 0.000 0.000 2.000 1.000 15920.512 15942.119 y_rep[58] 0.592 0.000 0.801 0.000 0.000 2.000 1.000 15881.191 15420.913 y_rep[59] 2.316 2.000 1.488 1.483 0.000 5.000 1.000 15664.171 15664.071 y_rep[60] 0.984 1.000 1.058 1.483 0.000 3.000 1.000 16520.685 15959.113 y_rep[61] 0.712 0.000 0.871 0.000 0.000 2.000 1.000 16129.576 15831.881 y_rep[62] 3.276 3.000 1.701 1.483 1.000 6.000 1.000 15919.769 15082.502 y_rep[63] 5.332 5.000 1.983 1.483 2.000 9.000 1.000 16050.521 15572.459 y_rep[64] 0.606 0.000 0.805 0.000 0.000 2.000 1.000 16223.124 15226.948 y_rep[65] 0.598 0.000 0.801 0.000 0.000 2.000 1.000 15717.647 15303.290 y_rep[66] 3.008 3.000 1.814 1.483 0.000 6.000 1.000 15935.228 15570.638 y_rep[67] 3.023 3.000 1.707 1.483 1.000 6.000 1.000 16198.082 15989.088 y_rep[68] 12.940 13.000 1.397 1.483 10.000 15.000 1.000 15165.535 NA y_rep[69] 0.695 0.000 0.869 0.000 0.000 2.000 1.000 15504.572 15125.132 y_rep[70] 2.317 2.000 1.518 1.483 0.000 5.000 1.000 15948.637 15810.740 y_rep[71] 0.970 1.000 1.061 1.483 0.000 3.000 1.000 15768.536 15594.514 y_rep[72] 0.952 1.000 1.025 1.483 0.000 3.000 1.000 15796.760 15723.982 y_rep[73] 0.000 0.000 0.000 0.000 0.000 0.000 NA NA NA y_rep[74] 0.002 0.000 0.050 0.000 0.000 0.000 1.000 15360.876 15334.101 y_rep[75] 0.003 0.000 0.056 0.000 0.000 0.000 1.000 15489.668 15489.668 y_rep[76] 0.019 0.000 0.143 0.000 0.000 0.000 1.000 14569.246 14521.442 y_rep[77] 0.022 0.000 0.156 0.000 0.000 0.000 1.000 15411.657 15347.607 y_rep[78] 0.023 0.000 0.159 0.000 0.000 0.000 1.000 15720.800 15712.634 y_rep[79] 0.021 0.000 0.148 0.000 0.000 0.000 1.000 15201.340 15151.226 y_rep[80] 0.025 0.000 0.166 0.000 0.000 0.000 1.000 14825.474 14944.662 y_rep[81] 0.021 0.000 0.151 0.000 0.000 0.000 1.000 15916.466 15887.271 y_rep[82] 0.019 0.000 0.145 0.000 0.000 0.000 1.000 15370.728 15382.116 y_rep[83] 0.120 0.000 0.386 0.000 0.000 1.000 1.000 15268.674 15235.171 y_rep[84] 0.000 0.000 0.016 0.000 0.000 0.000 1.000 16022.903 16022.903 y_rep[85] 0.032 0.000 0.187 0.000 0.000 0.000 1.000 15206.370 15154.711 y_rep[86] 0.256 0.000 0.578 0.000 0.000 1.000 1.000 15037.677 14469.633 y_rep[87] 0.924 1.000 1.122 1.483 0.000 3.000 1.000 15420.999 15370.369 y_rep[88] 0.021 0.000 0.152 0.000 0.000 0.000 1.000 15961.145 15926.622 y_rep[89] 0.024 0.000 0.161 0.000 0.000 0.000 1.000 15516.024 15530.953 y_rep[90] 0.002 0.000 0.045 0.000 0.000 0.000 1.000 14462.106 14462.106 y_rep[91] 0.020 0.000 0.160 0.000 0.000 0.000 1.000 15742.926 15743.958 y_rep[92] 11.421 12.000 1.772 1.483 8.000 14.000 1.000 16575.265 15425.287 y_rep[93] 0.020 0.000 0.147 0.000 0.000 0.000 1.000 15854.233 15791.351 y_rep[94] 0.035 0.000 0.206 0.000 0.000 0.000 1.000 13250.473 13743.207 y_rep[95] 0.001 0.000 0.024 0.000 0.000 0.000 1.000 16030.812 16030.812 y_rep[96] 0.002 0.000 0.047 0.000 0.000 0.000 1.000 13749.653 13708.387 y_rep[97] 0.000 0.000 0.008 0.000 0.000 0.000 1.000 16016.024 16016.024 y_rep[98] 0.002 0.000 0.043 0.000 0.000 0.000 1.000 16072.102 16072.102 y_rep[99] 0.005 0.000 0.070 0.000 0.000 0.000 1.000 14552.105 14738.926 y_rep[100] 0.017 0.000 0.137 0.000 0.000 0.000 1.000 15004.334 15024.013 y_rep[101] 0.021 0.000 0.148 0.000 0.000 0.000 1.000 15655.702 15663.967 y_rep[102] 0.022 0.000 0.157 0.000 0.000 0.000 1.000 15160.494 15185.270 y_rep[103] 0.021 0.000 0.153 0.000 0.000 0.000 1.000 15623.010 15633.772 y_rep[104] 0.021 0.000 0.151 0.000 0.000 0.000 1.000 15339.513 15352.708 y_rep[105] 0.022 0.000 0.155 0.000 0.000 0.000 1.000 15958.130 16009.259 y_rep[106] 0.020 0.000 0.147 0.000 0.000 0.000 1.000 15020.710 14869.637 y_rep[107] 0.122 0.000 0.380 0.000 0.000 1.000 1.000 14461.199 14572.844 y_rep[108] 0.000 0.000 0.021 0.000 0.000 0.000 1.000 16027.822 16027.822 y_rep[109] 0.028 0.000 0.171 0.000 0.000 0.000 1.000 14959.291 14882.052 y_rep[110] 0.243 0.000 0.566 0.000 0.000 1.000 1.000 16083.856 15955.187 y_rep[111] 0.937 1.000 1.132 1.483 0.000 3.000 1.000 14986.268 15179.384 y_rep[112] 0.023 0.000 0.155 0.000 0.000 0.000 1.000 15312.683 15294.405 y_rep[113] 0.021 0.000 0.153 0.000 0.000 0.000 1.000 15229.265 15330.128 y_rep[114] 0.002 0.000 0.045 0.000 0.000 0.000 1.000 16081.556 16081.556 y_rep[115] 0.018 0.000 0.147 0.000 0.000 0.000 1.000 16260.557 16247.073 y_rep[116] 11.401 12.000 1.788 1.483 8.000 14.000 1.000 16400.676 15635.655 y_rep[117] 0.017 0.000 0.136 0.000 0.000 0.000 1.000 14613.771 14575.597 y_rep[118] 0.037 0.000 0.215 0.000 0.000 0.000 1.000 13929.959 13841.774 y_rep[119] 0.000 0.000 0.019 0.000 0.000 0.000 1.000 16026.728 16026.728 y_rep[120] 0.002 0.000 0.047 0.000 0.000 0.000 1.000 11723.573 11723.573 y_rep[121] 0.000 0.000 0.000 0.000 0.000 0.000 NA NA NA y_rep[122] 0.003 0.000 0.054 0.000 0.000 0.000 1.000 12222.067 12222.067 y_rep[123] 0.004 0.000 0.062 0.000 0.000 0.000 1.000 15072.742 15052.700 y_rep[124] 0.018 0.000 0.141 0.000 0.000 0.000 1.000 14464.793 14607.416 y_rep[125] 0.021 0.000 0.147 0.000 0.000 0.000 1.000 14823.396 14798.578 y_rep[126] 0.020 0.000 0.144 0.000 0.000 0.000 1.000 15730.764 15674.861 y_rep[127] 0.018 0.000 0.138 0.000 0.000 0.000 1.000 16209.752 16260.575 y_rep[128] 0.022 0.000 0.153 0.000 0.000 0.000 1.000 15682.344 15651.697 y_rep[129] 0.021 0.000 0.149 0.000 0.000 0.000 1.000 15150.916 15133.853 y_rep[130] 0.020 0.000 0.147 0.000 0.000 0.000 1.000 15349.277 15151.120 y_rep[131] 0.117 0.000 0.381 0.000 0.000 1.000 1.000 14801.428 14843.448 y_rep[132] 0.000 0.000 0.018 0.000 0.000 0.000 1.000 16023.362 16023.362 y_rep[133] 0.029 0.000 0.179 0.000 0.000 0.000 1.000 15262.020 15231.519 y_rep[134] 0.251 0.000 0.567 0.000 0.000 1.000 1.000 14632.596 14711.165 y_rep[135] 0.925 1.000 1.140 1.483 0.000 3.000 1.000 16125.937 15644.744 y_rep[136] 0.020 0.000 0.148 0.000 0.000 0.000 1.000 15652.164 15691.500 y_rep[137] 0.021 0.000 0.150 0.000 0.000 0.000 1.000 16063.301 16036.654 y_rep[138] 0.002 0.000 0.052 0.000 0.000 0.000 1.000 14313.661 14275.533 y_rep[139] 0.019 0.000 0.146 0.000 0.000 0.000 1.000 15507.041 15658.486 y_rep[140] 11.417 12.000 1.779 1.483 8.000 14.000 1.000 15852.746 15656.514 y_rep[141] 0.016 0.000 0.133 0.000 0.000 0.000 1.000 15508.221 15419.114 y_rep[142] 0.036 0.000 0.207 0.000 0.000 0.000 1.000 13932.379 14368.192 y_rep[143] 0.000 0.000 0.019 0.000 0.000 0.000 1.000 16026.728 16026.728 y_rep[144] 0.002 0.000 0.042 0.000 0.000 0.000 1.000 16068.823 16068.823 y_rep[145] 0.000 0.000 0.000 0.000 0.000 0.000 NA NA NA y_rep[146] 0.003 0.000 0.052 0.000 0.000 0.000 1.000 14591.792 14774.659 y_rep[147] 0.003 0.000 0.062 0.000 0.000 0.000 1.000 15536.229 15516.756 y_rep[148] 0.017 0.000 0.140 0.000 0.000 0.000 1.000 15029.498 15115.751 y_rep[149] 0.021 0.000 0.147 0.000 0.000 0.000 1.000 15789.262 15728.900 y_rep[150] 0.019 0.000 0.144 0.000 0.000 0.000 1.000 15986.305 15988.710 y_rep[151] 0.023 0.000 0.157 0.000 0.000 0.000 1.000 15589.895 15748.014 y_rep[152] 0.020 0.000 0.148 0.000 0.000 0.000 1.000 15852.899 15952.424 y_rep[153] 0.023 0.000 0.156 0.000 0.000 0.000 1.000 15937.172 15952.076 y_rep[154] 0.020 0.000 0.149 0.000 0.000 0.000 1.000 15423.997 15502.334 y_rep[155] 0.114 0.000 0.371 0.000 0.000 1.000 1.000 15015.116 14751.339 y_rep[156] 0.000 0.000 0.022 0.000 0.000 0.000 1.000 16029.790 16029.790 y_rep[157] 0.029 0.000 0.177 0.000 0.000 0.000 1.000 15822.089 15865.589 y_rep[158] 0.252 0.000 0.570 0.000 0.000 1.000 1.000 14602.636 14999.716 y_rep[159] 0.930 1.000 1.127 1.483 0.000 3.000 1.000 15190.386 15198.313 y_rep[160] 0.020 0.000 0.143 0.000 0.000 0.000 1.000 15374.756 15352.612 y_rep[161] 0.022 0.000 0.155 0.000 0.000 0.000 1.000 15834.594 15832.276 y_rep[162] 0.002 0.000 0.047 0.000 0.000 0.000 1.000 16068.318 16068.560 y_rep[163] 0.021 0.000 0.160 0.000 0.000 0.000 1.000 14501.067 14556.245 y_rep[164] 11.398 12.000 1.765 1.483 8.000 14.000 1.000 17005.056 16039.330 y_rep[165] 0.018 0.000 0.141 0.000 0.000 0.000 1.000 15835.020 15768.551 y_rep[166] 0.040 0.000 0.217 0.000 0.000 0.000 1.000 14816.243 14827.697 y_rep[167] 0.000 0.000 0.018 0.000 0.000 0.000 1.000 16025.198 16025.198 y_rep[168] 0.002 0.000 0.046 0.000 0.000 0.000 1.000 16074.639 16074.889 y_rep[169] 0.015 0.000 0.127 0.000 0.000 0.000 1.000 14797.830 14781.978 y_rep[170] 0.092 0.000 0.330 0.000 0.000 1.000 1.000 14509.710 14683.022 y_rep[171] 0.107 0.000 0.352 0.000 0.000 1.000 1.000 15313.856 15223.738 y_rep[172] 0.192 0.000 0.463 0.000 0.000 1.000 1.000 15092.100 15240.712 y_rep[173] 0.194 0.000 0.468 0.000 0.000 1.000 1.000 15958.734 16043.946 y_rep[174] 0.189 0.000 0.455 0.000 0.000 1.000 1.000 15989.553 15908.859 y_rep[175] 0.193 0.000 0.464 0.000 0.000 1.000 1.000 15623.040 15623.276 y_rep[176] 0.184 0.000 0.450 0.000 0.000 1.000 1.000 15420.560 15366.318 y_rep[177] 0.193 0.000 0.467 0.000 0.000 1.000 1.000 16055.916 15429.129 y_rep[178] 0.185 0.000 0.453 0.000 0.000 1.000 1.000 15607.714 15116.924 y_rep[179] 0.881 1.000 1.009 1.483 0.000 3.000 1.000 15828.598 15518.635 y_rep[180] 0.048 0.000 0.234 0.000 0.000 0.000 1.000 15494.776 15614.552 y_rep[181] 0.238 0.000 0.518 0.000 0.000 1.000 1.000 14838.143 14938.225 y_rep[182] 1.487 1.000 1.292 1.483 0.000 4.000 1.000 15790.294 15757.706 y_rep[183] 3.415 3.000 1.737 1.483 1.000 6.000 1.000 15554.878 15301.183 y_rep[184] 0.193 0.000 0.456 0.000 0.000 1.000 1.000 15889.549 15594.844 y_rep[185] 0.184 0.000 0.453 0.000 0.000 1.000 1.000 15025.643 15023.682 y_rep[186] 0.185 0.000 0.497 0.000 0.000 1.000 1.000 14290.084 14279.838 y_rep[187] 0.523 0.000 0.839 0.000 0.000 2.000 1.000 14321.432 14859.082 y_rep[188] 12.572 13.000 1.483 1.483 10.000 15.000 1.000 15952.763 NA y_rep[189] 0.184 0.000 0.459 0.000 0.000 1.000 1.000 14288.110 14385.815 y_rep[190] 0.542 0.000 0.822 0.000 0.000 2.000 1.000 13938.405 14628.416 y_rep[191] 0.050 0.000 0.238 0.000 0.000 0.000 1.000 15857.451 15853.012 y_rep[192] 0.089 0.000 0.324 0.000 0.000 1.000 1.000 14749.692 14138.387 y_rep[193] 12.203 13.000 2.140 1.483 8.000 15.000 1.000 16935.978 NA y_rep[194] 4.639 4.000 2.338 2.965 1.000 9.000 1.000 15865.761 14563.543 y_rep[195] 1.996 2.000 1.611 1.483 0.000 5.000 1.000 15590.526 15186.128 y_rep[196] 1.523 1.000 1.398 1.483 0.000 4.000 1.000 15758.682 14855.673 y_rep[197] 1.534 1.000 1.383 1.483 0.000 4.000 1.000 15662.417 15643.835 y_rep[198] 1.572 1.000 1.408 1.483 0.000 4.000 1.000 16014.871 15610.059 y_rep[199] 1.549 1.000 1.397 1.483 0.000 4.000 1.000 15709.586 15616.166 y_rep[200] 1.526 1.000 1.384 1.483 0.000 4.000 1.000 16375.764 15247.799 y_rep[201] 8.024 8.000 2.622 2.965 4.000 12.000 1.000 17084.096 15744.259 y_rep[202] 1.733 1.000 1.466 1.483 0.000 4.000 1.000 15474.446 15302.103 y_rep[203] 5.441 5.000 2.269 2.965 2.000 9.000 1.000 14081.203 15198.831 y_rep[204] 6.982 7.000 2.191 1.483 3.000 11.000 1.000 14468.512 15044.911 y_rep[205] 1.569 1.000 1.405 1.483 0.000 4.000 1.000 14885.830 14717.165 y_rep[206] 11.488 12.000 2.195 1.483 7.000 15.000 1.000 15250.395 NA y_rep[207] 8.275 8.000 2.517 2.965 4.000 12.000 1.000 14469.413 14678.060 y_rep[208] 1.998 2.000 1.604 1.483 0.000 5.000 1.000 15665.265 15139.014 y_rep[209] 6.001 6.000 2.437 2.965 2.000 10.000 1.000 14424.778 14128.287 y_rep[210] 8.020 8.000 2.624 2.965 4.000 12.000 1.000 15285.260 13399.057 y_rep[211] 5.448 5.000 2.467 2.965 2.000 10.000 1.000 15360.432 14626.612 y_rep[212] 1.534 1.000 1.395 1.483 0.000 4.000 1.000 16340.148 15414.607 y_rep[213] 4.393 4.000 2.098 1.483 1.000 8.000 1.000 16051.988 15688.674 y_rep[214] 1.520 1.000 1.389 1.483 0.000 4.000 1.000 16192.653 14459.852 y_rep[215] 13.139 13.000 1.340 1.483 11.000 15.000 1.000 15775.246 NA y_rep[216] 5.459 5.000 2.492 2.965 2.000 10.000 1.000 14524.563 13334.150 y_rep[217] 0.584 0.000 0.846 0.000 0.000 2.000 1.000 15574.586 14578.093 y_rep[218] 0.703 0.000 0.895 0.000 0.000 2.000 1.000 15898.825 14003.161 y_rep[219] 0.705 0.000 0.876 0.000 0.000 2.000 1.000 15027.253 15134.472 y_rep[220] 0.603 0.000 0.798 0.000 0.000 2.000 1.000 16131.431 16069.838 y_rep[221] 0.525 0.000 0.743 0.000 0.000 2.000 1.000 16120.072 15854.765 y_rep[222] 0.525 0.000 0.750 0.000 0.000 2.000 1.000 16621.563 16060.863 y_rep[223] 0.524 0.000 0.751 0.000 0.000 2.000 1.000 15117.104 15063.262 y_rep[224] 0.525 0.000 0.759 0.000 0.000 2.000 1.000 16203.010 15955.189 y_rep[225] 0.515 0.000 0.745 0.000 0.000 2.000 1.000 15438.933 14951.883 y_rep[226] 0.512 0.000 0.740 0.000 0.000 2.000 1.000 15692.989 15565.019 y_rep[227] 2.104 2.000 1.448 1.483 0.000 5.000 1.000 15917.961 16005.788 y_rep[228] 0.685 0.000 0.901 0.000 0.000 2.000 1.000 15313.630 15063.938 y_rep[229] 0.633 0.000 0.826 0.000 0.000 2.000 1.000 15756.038 15901.717 y_rep[230] 3.024 3.000 1.641 1.483 1.000 6.000 1.000 15530.248 15549.853 y_rep[231] 5.072 5.000 1.953 1.483 2.000 8.000 1.000 15639.841 15786.294 y_rep[232] 0.525 0.000 0.751 0.000 0.000 2.000 1.000 15024.319 15370.739 y_rep[233] 0.523 0.000 0.755 0.000 0.000 2.000 1.000 16037.762 16259.264 y_rep[234] 2.183 2.000 1.602 1.483 0.000 5.000 1.000 14820.593 15795.399 y_rep[235] 2.503 2.000 1.603 1.483 0.000 5.000 1.000 15940.612 15545.939 y_rep[236] 12.895 13.000 1.378 1.483 10.000 15.000 1.000 15816.473 NA y_rep[237] 0.594 0.000 0.798 0.000 0.000 2.000 1.000 15190.604 15488.350 y_rep[238] 1.979 2.000 1.421 1.483 0.000 5.000 1.000 14541.308 15396.955 y_rep[239] 0.687 0.000 0.892 0.000 0.000 2.000 1.000 15899.578 15492.215 y_rep[240] 0.713 0.000 0.896 0.000 0.000 2.000 1.000 16162.288 15837.092 y_rep[241] 0.574 0.000 0.836 0.000 0.000 2.000 1.000 16266.384 15478.638 y_rep[242] 0.711 0.000 0.892 0.000 0.000 2.000 1.000 15654.829 15557.543 y_rep[243] 0.696 0.000 0.885 0.000 0.000 2.000 1.000 16026.762 15256.674 y_rep[244] 0.585 0.000 0.784 0.000 0.000 2.000 1.000 16192.062 15110.089 y_rep[245] 0.515 0.000 0.747 0.000 0.000 2.000 1.000 16156.660 15577.748 y_rep[246] 0.513 0.000 0.753 0.000 0.000 2.000 1.000 16129.963 15634.174 y_rep[247] 0.527 0.000 0.758 0.000 0.000 2.000 1.000 15768.377 15140.457 y_rep[248] 0.530 0.000 0.750 0.000 0.000 2.000 1.000 16292.485 16039.655 y_rep[249] 0.526 0.000 0.751 0.000 0.000 2.000 1.000 15746.586 15769.763 y_rep[250] 0.519 0.000 0.749 0.000 0.000 2.000 1.000 16332.041 13865.983 y_rep[251] 2.099 2.000 1.438 1.483 0.000 5.000 1.000 15907.895 15646.796 y_rep[252] 0.693 0.000 0.905 0.000 0.000 2.000 1.000 16228.623 15356.831 y_rep[253] 0.642 0.000 0.829 0.000 0.000 2.000 1.000 15391.610 15050.671 y_rep[254] 3.024 3.000 1.667 1.483 1.000 6.000 1.000 15356.033 15308.385 y_rep[255] 5.065 5.000 1.929 1.483 2.000 8.000 1.000 16145.046 14613.039 y_rep[256] 0.524 0.000 0.747 0.000 0.000 2.000 1.000 16115.969 15209.357 y_rep[257] 0.519 0.000 0.747 0.000 0.000 2.000 1.000 16204.220 14858.230 y_rep[258] 2.202 2.000 1.611 1.483 0.000 5.000 1.000 15309.025 15944.217 y_rep[259] 2.498 2.000 1.606 1.483 0.000 5.000 1.000 15664.869 14247.356 y_rep[260] 12.889 13.000 1.401 1.483 10.000 15.000 1.000 15794.658 NA y_rep[261] 0.601 0.000 0.809 0.000 0.000 2.000 1.000 16197.026 15712.530 y_rep[262] 1.986 2.000 1.424 1.483 0.000 5.000 1.000 16657.052 16090.550 y_rep[263] 0.685 0.000 0.900 0.000 0.000 2.000 1.000 15961.865 15679.102 y_rep[264] 0.710 0.000 0.893 0.000 0.000 2.000 1.000 16214.036 16235.905 y_rep[265] 1.147 1.000 1.228 1.483 0.000 3.000 1.000 16066.834 15411.481 y_rep[266] 0.989 1.000 1.047 1.483 0.000 3.000 1.000 16296.822 15619.769 y_rep[267] 0.967 1.000 1.032 1.483 0.000 3.000 1.000 15421.805 15659.530 y_rep[268] 0.715 0.000 0.869 0.000 0.000 2.000 1.000 15874.093 15879.648 y_rep[269] 0.621 0.000 0.817 0.000 0.000 2.000 1.000 15792.805 15572.855 y_rep[270] 0.618 0.000 0.823 0.000 0.000 2.000 1.000 16019.337 15977.870 y_rep[271] 0.624 0.000 0.819 0.000 0.000 2.000 1.000 15571.113 15775.997 y_rep[272] 0.627 0.000 0.821 0.000 0.000 2.000 1.000 16178.867 16079.432 y_rep[273] 0.622 0.000 0.820 0.000 0.000 2.000 1.000 15890.785 15290.890 y_rep[274] 0.624 0.000 0.822 0.000 0.000 2.000 1.000 15306.242 15501.691 y_rep[275] 2.413 2.000 1.513 1.483 0.000 5.000 1.000 16304.087 15645.585 y_rep[276] 1.086 1.000 1.124 1.483 0.000 3.000 1.000 16285.068 15691.796 y_rep[277] 0.746 1.000 0.892 1.483 0.000 2.000 1.000 15835.759 15422.618 y_rep[278] 3.350 3.000 1.729 1.483 1.000 6.000 1.001 15848.451 16157.836 y_rep[279] 5.379 5.000 1.960 1.483 2.000 9.000 1.000 16005.186 15816.252 y_rep[280] 0.632 0.000 0.824 0.000 0.000 2.000 1.000 16017.971 14785.461 y_rep[281] 0.610 0.000 0.807 0.000 0.000 2.000 1.000 15950.138 15510.969 y_rep[282] 3.175 3.000 1.875 1.483 0.000 7.000 1.000 15637.250 15991.133 y_rep[283] 3.153 3.000 1.748 1.483 1.000 6.000 1.000 15717.429 15582.298 y_rep[284] 12.920 13.000 1.399 1.483 10.000 15.000 1.000 16011.260 NA y_rep[285] 0.711 0.000 0.879 0.000 0.000 2.000 1.000 16295.734 15842.154 y_rep[286] 2.408 2.000 1.555 1.483 0.000 5.000 1.000 16018.399 15394.417 y_rep[287] 1.079 1.000 1.122 1.483 0.000 3.000 1.000 16235.896 15873.312 y_rep[288] 1.002 1.000 1.057 1.483 0.000 3.000 1.000 16158.558 15707.752 y_rep[289] 0.000 0.000 0.000 0.000 0.000 0.000 NA NA NA y_rep[290] 0.002 0.000 0.051 0.000 0.000 0.000 1.000 14525.557 14459.443 y_rep[291] 0.004 0.000 0.071 0.000 0.000 0.000 1.000 13427.326 13309.723 y_rep[292] 0.018 0.000 0.136 0.000 0.000 0.000 1.000 15533.954 15651.364 y_rep[293] 0.020 0.000 0.148 0.000 0.000 0.000 1.000 15850.471 15848.732 y_rep[294] 0.023 0.000 0.156 0.000 0.000 0.000 1.000 15150.740 15227.041 y_rep[295] 0.021 0.000 0.146 0.000 0.000 0.000 1.000 14912.914 14961.362 y_rep[296] 0.020 0.000 0.144 0.000 0.000 0.000 1.000 15506.192 15519.578 y_rep[297] 0.020 0.000 0.150 0.000 0.000 0.000 1.000 16365.453 16339.290 y_rep[298] 0.021 0.000 0.150 0.000 0.000 0.000 1.000 15682.071 15684.784 y_rep[299] 0.117 0.000 0.375 0.000 0.000 1.000 1.000 14711.237 14765.563 y_rep[300] 0.000 0.000 0.019 0.000 0.000 0.000 1.000 16026.728 16026.728 y_rep[301] 0.030 0.000 0.184 0.000 0.000 0.000 1.000 14772.478 14771.317 y_rep[302] 0.250 0.000 0.574 0.000 0.000 1.000 1.000 15134.154 14307.038 y_rep[303] 0.923 1.000 1.124 1.483 0.000 3.000 1.000 15884.868 15145.105 y_rep[304] 0.023 0.000 0.157 0.000 0.000 0.000 1.000 15369.284 15323.110 y_rep[305] 0.021 0.000 0.151 0.000 0.000 0.000 1.000 15008.479 15051.349 y_rep[306] 0.002 0.000 0.047 0.000 0.000 0.000 1.000 16079.419 16079.557 y_rep[307] 0.020 0.000 0.153 0.000 0.000 0.000 1.000 14047.873 14037.357 y_rep[308] 11.392 12.000 1.812 1.483 8.000 14.000 1.000 15463.309 15361.865 y_rep[309] 0.020 0.000 0.144 0.000 0.000 0.000 1.000 14691.390 14811.244 y_rep[310] 0.036 0.000 0.205 0.000 0.000 0.000 1.000 14676.080 14785.531 y_rep[311] 0.000 0.000 0.014 0.000 0.000 0.000 1.000 16019.080 16019.080 y_rep[312] 0.002 0.000 0.044 0.000 0.000 0.000 1.000 12894.816 12832.555 4.4 Results Let’s get some summary descriptive statistics of the posterior fit_summary_a_b &lt;- fit_bbob$summary(c(&#39;a&#39;,&#39;b&#39;)) fit_summary_a &lt;- fit_bbob$summary(c(&#39;a&#39;)) fit_summary_b &lt;- fit_bbob$summary(c(&#39;b&#39;)) fit_summary_theta &lt;- fit_bbob$summary(c(&#39;theta&#39;)) 4.4.1 Difficulty and discrimination Table for the benchmark functions table_benchmarks &lt;- fit_summary_a_b %&gt;% select(&#39;Benchmark ID&#39;=variable, Median=median, &#39;CI 5%&#39;=q5, &#39;CI 95%&#39;=q95) table_benchmarks$&#39;Benchmark ID&#39;&lt;-rep(benchmarks,2) kable(table_benchmarks, caption=&#39;Summary values of the discrimination and difficulty level parameters for the BBOB benchmarks&#39;, booktabs=T, digits =3, format=&#39;html&#39;, linesep = &quot;&quot;) %&gt;% kable_styling() %&gt;% pack_rows(&quot;Discrimination value (a)&quot;,1,24) %&gt;% pack_rows(&quot;Difficulty level (b)&quot;,25,48) Table 4.2: Summary values of the discrimination and difficulty level parameters for the BBOB benchmarks Benchmark ID Median CI 5% CI 95% Discrimination value (a) 1 6.430 4.318 9.009 2 4.250 2.598 6.321 3 3.931 2.216 6.127 4 2.328 1.181 3.964 5 0.179 0.127 0.255 6 1.565 0.691 3.139 7 1.821 0.865 3.392 8 4.244 2.607 6.312 9 3.213 1.714 5.119 10 3.192 1.665 5.118 11 2.848 1.424 4.730 12 1.554 0.693 3.123 13 1.347 0.629 2.763 14 1.343 0.641 2.775 15 1.355 0.634 2.707 16 1.347 0.641 2.758 17 1.345 0.628 2.734 18 1.356 0.640 2.761 19 1.113 0.576 2.044 20 1.275 0.598 2.572 21 0.939 0.477 1.857 22 0.632 0.347 1.115 23 1.355 0.630 2.813 24 1.340 0.620 2.766 Difficulty level (b) 1 0.189 -0.675 1.049 2 0.418 -0.458 1.301 3 0.120 -0.750 0.999 4 0.384 -0.532 1.366 5 -10.553 -13.618 -7.825 6 1.784 0.476 4.159 7 0.734 -0.260 1.992 8 0.420 -0.463 1.306 9 0.657 -0.248 1.668 10 0.667 -0.247 1.680 11 0.788 -0.148 1.884 12 1.802 0.492 4.163 13 2.202 0.709 4.876 14 2.204 0.713 4.800 15 2.182 0.747 4.936 16 2.195 0.717 4.822 17 2.195 0.715 4.873 18 2.191 0.719 4.779 19 1.336 0.186 2.976 20 2.178 0.714 4.874 21 1.138 -0.056 2.847 22 0.734 -0.397 2.233 23 2.192 0.702 4.841 24 2.218 0.721 4.945 A more visual representation. mcmc_intervals(draws_a) + scale_y_discrete(labels=benchmarks)+ labs(x=&#39;Discrimination parameter (a)&#39;, y=&#39;Benchmark function ID&#39;, title=&#39;Discrimination parameter distribution (BBOB)&#39;) ## Scale for &#39;y&#39; is already present. Adding another scale for &#39;y&#39;, which will ## replace the existing scale. mcmc_intervals(draws_b) + scale_y_discrete(labels=benchmarks)+ labs(x=&#39;Difficulty level parameter (b)&#39;, y=&#39;Benchmark function ID&#39;, title=&#39;Difficulty level parameter distribution (BBOB)&#39;) ## Scale for &#39;y&#39; is already present. Adding another scale for &#39;y&#39;, which will ## replace the existing scale. 4.4.2 Ability Creating a table: table_algorithms &lt;- fit_summary_theta %&gt;% select(Algorithms=variable, Median=median, &#39;CI 5%&#39;=q5, &#39;CI 95%&#39;=q95) table_algorithms$Algorithms &lt;- algorithms kable(table_algorithms, caption=&#39;Summary values of the ability level of the algorithms (BBOB)&#39;, booktabs=T, digits =3, format=&#39;html&#39;, linesep = &quot;&quot;) %&gt;% kable_styling() Table 4.3: Summary values of the ability level of the algorithms (BBOB) Algorithms Median CI 5% CI 95% adapt-Nelder-Mead-scipy-2019 -0.690 -1.604 0.212 Adaptive_Two_Mode -0.024 -0.892 0.838 BFGS-scipy-2019 -0.254 -1.131 0.624 CG-scipy-2019 -3.911 -6.100 -2.172 COBYLA-scipy-2019 -3.904 -6.193 -2.156 DE-scipy-2019 -3.896 -6.094 -2.180 L-BFGS-B-scipy-2019 -3.912 -6.159 -2.152 Nelder-Mead-scipy-2019 -1.271 -2.345 -0.284 Powell-scipy-2019 0.433 -0.430 1.292 RS-4-initIn0 -0.356 -1.250 0.518 RS-5-initIn0 -0.360 -1.243 0.521 RS-6-initIn0 -0.235 -1.110 0.644 TNC-scipy-2019 -3.899 -6.193 -2.180 A more visual representation. mcmc_intervals(draws_theta) + scale_y_discrete(labels=algorithms)+ labs(x=unname(TeX(&quot;Ability level ($\\\\theta$)&quot;)), y=&#39;Algorithm&#39;, title=&#39;Ability level parameter distribution (BBOB)&#39;) ## Scale for &#39;y&#39; is already present. Adding another scale for &#39;y&#39;, which will ## replace the existing scale. 4.4.3 Item information First let’s create a few helper functions to calculate the item information p_info &lt;- function(a,b, theta){ return(exp(a*(theta-b))/(1+exp(a*(theta-b)))) } q_info &lt;- function(a,b, theta){ return(1-p_info(a,b, theta)) } #a and b are a vector of 3 a[1] is lower q05 a[2] is median and a[3] is q95 #return a data frame ready to be plottted item_info_with_intervals &lt;- function(a,b,item, thetamin=-5, thetamax=5,step=0.1){ theta &lt;- seq(from=thetamin, to=thetamax, by=step) info_median &lt;- a[1]^2*p_info(a[1],b[1],theta)*q_info(a[1],b[1],theta) info_lower &lt;- a[2]^2*p_info(a[2],b[2],theta)*q_info(a[2],b[2],theta) info_higher &lt;- a[3]^2*p_info(a[3],b[3],theta)*q_info(a[3],b[3],theta) out&lt;- data.frame(Information= c(info_lower,info_median,info_higher), theta=c(theta,theta,theta), pars=c(rep(&#39;q05&#39;,length(theta)), rep(&#39;median&#39;,length(theta)), rep(&#39;q95&#39;,length(theta))), item=c(rep(item,length(theta)), rep(item,length(theta)), rep(item,length(theta)))) return(out) } Creating a single data frame item_information_df &lt;- NULL for(i in seq(1:length(benchmarks))){ a&lt;-as.matrix(fit_summary_a[i,c(3,6,7)]) b&lt;-as.matrix(fit_summary_b[i,c(3,6,7)]) iinfo &lt;- item_info_with_intervals(a=a,b=b,item = i,thetamin = -7, thetamax = 5) item_information_df &lt;- rbind(item_information_df,iinfo) } Now we can create an information plot for every item item_information_df %&gt;% pivot_wider(names_from = &#39;pars&#39;, values_from = &#39;Information&#39;) %&gt;% ggplot(aes(x=theta))+ geom_line(aes(y=median), color=&#39;black&#39;)+ facet_wrap(~item, ncol=4) + labs(title=&#39;Item information curve (BBOB)&#39;, x=unname(TeX(&quot;Ability ($\\\\theta$)&quot;)), y=&#39;Information&#39;, color=&#39;Information interval&#39;)+ theme_bw() + theme(legend.position = &#39;bottom&#39;) 4.4.4 Test information We can also look at the test information. First, we need to pivot wider so we can sum the items test_information_df &lt;- item_information_df %&gt;% pivot_wider(names_from = &#39;item&#39;, values_from = &#39;Information&#39;) %&gt;% mutate(TestInfo = dplyr::select(., -theta, -pars) %&gt;% rowSums()) %&gt;% dplyr::select(theta, pars, TestInfo) Now that we have calculated the test parameters we can plot the test information First let’s get a horizontal line to show where the algorithms median ability lies alg_median &lt;- fit_summary_theta %&gt;% mutate(Algorithm=algorithms) %&gt;% select(Algorithm, median) test_information_df %&gt;% dplyr::select(theta, pars, TestInfo) %&gt;% pivot_wider(names_from = &#39;pars&#39;, values_from = &#39;TestInfo&#39;) %&gt;% ggplot(aes(x=theta)) + geom_line(aes(y=median))+ geom_vline(data=alg_median, aes(xintercept=median,color=Algorithm),linetype=&#39;dashed&#39;)+ labs( title=&#39;Test Information Curve (BBOB)&#39;, x=unname(TeX(&quot;Ability ($\\\\theta$)&quot;)), y=&#39;Test information&#39;, color=&#39;Algorithm median&#39; )+ theme_bw()+ guides(color=guide_legend(nrow=5,byrow=TRUE))+ theme(legend.position = &#39;bottom&#39;) "],["case-study-ii-pbo.html", "Chapter 5 Case study II: PBO 5.1 Importing the data 5.2 Preparing the Stan data 5.3 Diagnostics 5.4 Results", " Chapter 5 Case study II: PBO 5.1 Importing the data To illustrate and make the analysis we will use 5 as the number of dimensions for the benchmark functions d_pbo &lt;- read_csv(&#39;data/pbo.csv&#39;) %&gt;% select(algId, DIM, funcId, runs, succ, budget) %&gt;% filter(DIM==16) %&gt;% mutate(algId_index = as.integer(as.factor(algId))) #vector with the names in order benchmarks &lt;- seq(1,23) algorithms &lt;- levels(as.factor(d_pbo$algId)) 5.2 Preparing the Stan data pbo_standata &lt;- list( N = nrow(d_pbo), y_succ = as.integer(d_pbo$succ), N_tries = as.integer(d_pbo$runs), p = d_pbo$algId_index, Np = as.integer(length(unique(d_pbo$algId_index))), item = as.integer(d_pbo$funcId), Nitem = as.integer(length(unique(d_pbo$funcId))) ) irt2pl &lt;- cmdstan_model(&#39;models/irt2pl.stan&#39;) fit_pbo &lt;- irt2pl$sample( data= pbo_standata, seed = seed, chains = 4, iter_sampling = 4000, parallel_chains = 4, max_treedepth = 15 ) fit_pbo$save_object(file=&#39;fitted/pbo16.RDS&#39;) To load the fitted model to save time in compiling this document fit_pbo&lt;-readRDS(&#39;fitted/pbo16.RDS&#39;) 5.3 Diagnostics Getting the draws from the posterior draws_a &lt;- fit_pbo$draws(&#39;a&#39;) draws_b &lt;- fit_pbo$draws(&#39;b&#39;) draws_theta &lt;- fit_pbo$draws(&#39;theta&#39;) 5.3.1 Traceplots mcmc_trace(draws_a) mcmc_trace(draws_b) mcmc_trace(draws_theta) 5.3.2 Rhat and Effective samples fit_pbo$summary() %&gt;% kable(caption=&#39;Summary values fit of the model, including effective samples and Rhat&#39;, booktabs=T, digits =3, format=&#39;html&#39;) %&gt;% kable_styling() %&gt;% scroll_box() Table 5.1: Summary values fit of the model, including effective samples and Rhat variable mean median sd mad q5 q95 rhat ess_bulk ess_tail lp__ -581.699 -581.418 6.292 6.252 -592.366 -571.771 1.001 3883.642 7068.332 b[1] -0.683 -0.629 0.739 0.669 -1.930 0.389 1.002 1619.587 3916.449 b[2] -0.674 -0.616 0.742 0.672 -1.901 0.397 1.002 1711.981 3375.299 b[3] -1.988 -1.733 1.347 1.120 -4.570 -0.285 1.001 4367.543 6005.187 b[4] -3.430 -3.185 1.747 1.710 -6.657 -1.031 1.001 8847.775 10212.229 b[5] -2.004 -1.759 1.347 1.138 -4.580 -0.277 1.001 4252.917 6468.271 b[6] -3.469 -3.217 1.771 1.698 -6.777 -1.026 1.000 8131.056 10593.452 b[7] 0.634 0.633 0.581 0.589 -0.326 1.573 1.003 1371.617 2689.014 b[8] -0.047 -0.041 0.573 0.588 -0.988 0.885 1.003 1285.212 2596.902 b[9] -0.157 -0.151 0.586 0.598 -1.131 0.795 1.003 1325.181 2864.499 b[10] -3.540 -3.523 2.295 2.220 -7.331 0.158 1.000 13997.424 8994.802 b[11] -3.435 -3.179 1.759 1.698 -6.716 -1.038 1.000 9022.686 10282.626 b[12] -1.500 -1.300 1.158 0.948 -3.673 -0.027 1.001 3084.613 4728.449 b[13] -3.470 -3.233 1.769 1.729 -6.731 -1.010 1.000 7954.683 9611.534 b[14] 1.101 1.099 0.593 0.608 0.127 2.067 1.003 1465.963 3178.756 b[15] -1.486 -1.288 1.154 0.928 -3.671 -0.038 1.001 3176.183 4225.810 b[16] -0.346 -0.331 0.604 0.606 -1.345 0.608 1.002 1349.709 3100.828 b[17] -1.455 -1.308 1.087 0.957 -3.455 0.009 1.001 3207.599 5478.346 b[18] 1.573 1.578 0.709 0.702 0.401 2.738 1.002 2073.487 4520.739 b[19] -0.768 -0.695 0.835 0.786 -2.238 0.472 1.002 2082.773 4329.199 b[20] -3.476 -3.298 1.558 1.481 -6.347 -1.254 1.001 6173.014 8820.348 b[21] -4.062 -3.890 1.653 1.598 -7.018 -1.678 1.001 6832.772 9577.002 b[22] -2.553 -2.388 1.367 1.277 -5.032 -0.633 1.001 4999.038 6668.300 b[23] 0.355 0.360 0.571 0.584 -0.595 1.275 1.003 1314.129 2899.819 a[1] 3.934 3.707 1.837 1.837 1.355 7.305 1.000 10482.518 6617.247 a[2] 3.937 3.701 1.817 1.798 1.391 7.285 1.000 11107.081 6472.795 a[3] 2.713 2.411 1.483 1.351 0.885 5.567 1.000 12066.342 9175.795 a[4] 3.464 3.189 1.716 1.665 1.192 6.686 1.000 21378.536 10784.405 a[5] 2.706 2.367 1.511 1.370 0.888 5.625 1.000 10187.985 8808.061 a[6] 3.460 3.155 1.728 1.671 1.196 6.756 1.000 22233.362 11142.743 a[7] 1.777 1.699 0.565 0.532 1.006 2.816 1.000 9235.783 11044.112 a[8] 5.405 5.220 1.727 1.693 2.877 8.540 1.000 12518.009 11842.410 a[9] 4.112 3.928 1.424 1.379 2.097 6.707 1.000 11774.405 10021.930 a[10] 0.062 0.059 0.031 0.029 0.015 0.117 1.000 6929.124 3558.016 a[11] 3.449 3.170 1.692 1.636 1.206 6.663 1.000 20504.043 11361.605 a[12] 2.916 2.611 1.593 1.532 0.900 5.968 1.000 10505.108 7419.611 a[13] 3.449 3.151 1.722 1.662 1.202 6.678 1.000 21554.343 11428.768 a[14] 1.467 1.408 0.419 0.389 0.890 2.249 1.000 9334.328 10855.270 a[15] 2.943 2.645 1.606 1.527 0.912 6.013 1.000 10472.136 7012.017 a[16] 4.981 4.789 2.025 2.068 2.009 8.585 1.000 13988.593 8593.783 a[17] 1.398 1.274 0.661 0.600 0.571 2.647 1.000 10909.801 8282.476 a[18] 0.497 0.484 0.132 0.126 0.306 0.735 1.001 8682.765 9710.728 a[19] 1.138 1.055 0.470 0.421 0.537 2.014 1.000 8857.538 9008.410 a[20] 0.527 0.491 0.189 0.162 0.289 0.888 1.000 11049.366 11073.602 a[21] 0.428 0.403 0.142 0.125 0.245 0.694 1.001 11939.433 11161.840 a[22] 0.622 0.582 0.231 0.209 0.325 1.056 1.000 10627.937 9775.536 a[23] 2.672 2.581 0.837 0.808 1.467 4.192 1.000 11187.964 9926.076 theta[1] 1.504 1.496 0.633 0.638 0.464 2.545 1.003 1619.499 3267.244 theta[2] 4.385 4.290 1.187 1.150 2.589 6.494 1.001 5924.706 9161.527 theta[3] 6.048 5.931 1.520 1.503 3.761 8.694 1.000 9604.680 9284.926 theta[4] 6.544 6.432 1.614 1.605 4.080 9.362 1.000 11620.501 10261.762 theta[5] 6.041 5.913 1.526 1.483 3.736 8.721 1.001 9097.508 10472.750 theta[6] 6.060 5.944 1.535 1.500 3.725 8.758 1.000 8938.844 9589.486 theta[7] 1.947 1.939 0.675 0.669 0.847 3.077 1.003 1801.573 3782.787 theta[8] 0.885 0.886 0.587 0.601 -0.083 1.850 1.003 1391.774 3299.372 theta[9] -0.161 -0.155 0.581 0.601 -1.120 0.777 1.003 1303.435 2552.924 theta[10] 0.681 0.679 0.580 0.598 -0.277 1.625 1.003 1363.143 2642.354 theta[11] -0.084 -0.081 0.565 0.583 -1.021 0.833 1.003 1252.784 2728.216 theta[12] 0.416 0.420 0.567 0.580 -0.518 1.337 1.003 1287.660 2742.103 log_lik[1] -0.046 -0.007 0.097 0.010 -0.231 0.000 1.000 10098.427 9056.558 log_lik[2] -6.106 -6.093 0.801 0.842 -7.474 -4.795 1.000 7945.618 4108.792 log_lik[3] -0.004 0.000 0.016 0.000 -0.018 0.000 1.000 17174.592 11960.021 log_lik[4] -0.040 -0.010 0.075 0.015 -0.184 0.000 1.000 11935.627 10986.484 log_lik[5] -0.004 0.000 0.018 0.000 -0.019 0.000 1.000 17810.875 12717.642 log_lik[6] -2.279 -2.070 0.912 0.854 -4.056 -1.233 1.000 16131.432 13749.913 log_lik[7] -0.039 -0.010 0.071 0.015 -0.176 0.000 1.000 11957.214 10093.974 log_lik[8] -0.036 -0.003 0.096 0.004 -0.193 0.000 1.000 10374.887 9628.640 log_lik[9] -0.399 -0.339 0.292 0.273 -0.956 -0.045 1.000 15091.480 11853.330 log_lik[10] -2.502 -2.413 0.615 0.585 -3.639 -1.657 1.000 20842.199 13217.487 log_lik[11] -0.045 -0.007 0.094 0.011 -0.228 0.000 1.000 10289.313 9496.207 log_lik[12] -1.027 -0.988 0.104 0.047 -1.242 -0.953 1.000 9527.780 11016.582 log_lik[13] -0.808 -0.626 0.679 0.550 -2.146 -0.081 1.000 18179.720 14347.823 log_lik[14] -0.026 -0.006 0.052 0.008 -0.119 0.000 1.000 13967.145 11782.816 log_lik[15] -0.004 0.000 0.017 0.000 -0.020 0.000 1.000 18408.130 12957.375 log_lik[16] -0.026 -0.006 0.053 0.008 -0.119 0.000 1.000 13512.980 11580.792 log_lik[17] -0.004 0.000 0.016 0.000 -0.019 0.000 1.000 18358.683 12163.811 log_lik[18] -2.511 -2.315 1.283 1.259 -4.919 -0.745 1.000 17783.682 13338.194 log_lik[19] -0.028 -0.005 0.071 0.007 -0.137 0.000 1.000 18753.378 12880.847 log_lik[20] -0.066 -0.021 0.116 0.030 -0.285 0.000 1.000 18796.653 13751.128 log_lik[21] -0.002 0.000 0.014 0.000 -0.008 0.000 1.000 9506.291 NA log_lik[22] -5.353 -5.303 1.036 1.071 -7.209 -3.708 1.000 7829.893 3681.247 log_lik[23] 0.000 0.000 0.003 0.000 -0.001 0.000 1.000 17628.435 NA log_lik[24] -0.003 0.000 0.015 0.000 -0.016 0.000 1.000 10668.939 10612.804 log_lik[25] 0.000 0.000 0.003 0.000 -0.001 0.000 1.000 18138.991 NA log_lik[26] -0.271 -0.137 0.368 0.175 -1.008 -0.003 1.000 24053.304 11279.816 log_lik[27] -0.003 0.000 0.015 0.000 -0.015 0.000 1.000 10688.290 9179.808 log_lik[28] -0.001 0.000 0.013 0.000 -0.002 0.000 1.000 10274.433 NA log_lik[29] -0.043 -0.010 0.079 0.015 -0.198 0.000 1.000 14045.498 11914.640 log_lik[30] -2.313 -2.043 0.911 0.697 -4.147 -1.424 1.001 23611.128 12260.110 log_lik[31] -0.002 0.000 0.015 0.000 -0.007 0.000 1.000 9839.791 NA log_lik[32] -0.285 -0.226 0.231 0.200 -0.746 -0.026 1.000 16947.655 12722.195 log_lik[33] -0.011 -0.001 0.040 0.001 -0.053 0.000 1.000 21802.373 13186.985 log_lik[34] -0.002 0.000 0.011 0.000 -0.010 0.000 1.000 12248.365 11743.590 log_lik[35] 0.000 0.000 0.003 0.000 -0.001 0.000 1.000 17765.134 NA log_lik[36] -0.002 0.000 0.010 0.000 -0.010 0.000 1.000 11277.712 10479.524 log_lik[37] 0.000 0.000 0.003 0.000 -0.001 0.000 1.000 18411.024 NA log_lik[38] -0.090 -0.025 0.166 0.036 -0.401 0.000 1.000 21432.901 12926.217 log_lik[39] 0.000 0.000 0.001 0.000 0.000 0.000 1.000 21569.216 NA log_lik[40] -0.001 0.000 0.005 0.000 -0.001 0.000 1.000 20363.241 12095.512 log_lik[41] -1.967 -1.776 1.054 0.951 -3.937 -0.633 1.000 14790.632 13130.037 log_lik[42] -4.376 -4.382 0.567 0.606 -5.253 -3.435 1.000 9575.729 11342.469 log_lik[43] -0.051 -0.002 0.131 0.003 -0.269 0.000 1.000 16513.057 11203.453 log_lik[44] -0.740 -0.605 0.559 0.440 -1.799 -0.128 1.000 14561.802 11673.391 log_lik[45] -0.054 -0.002 0.137 0.003 -0.288 0.000 1.000 17136.578 11757.279 log_lik[46] -1.294 -1.180 0.365 0.275 -2.028 -0.956 1.000 17111.198 13377.630 log_lik[47] -0.735 -0.600 0.543 0.434 -1.787 -0.134 1.000 14422.418 11048.805 log_lik[48] -3.546 -3.317 1.633 1.532 -6.563 -1.301 1.000 15132.091 13985.437 log_lik[49] -2.461 -2.305 0.980 0.897 -4.294 -1.162 1.000 14640.532 10974.823 log_lik[50] -2.541 -2.446 0.723 0.689 -3.880 -1.523 1.000 20436.426 9722.504 log_lik[51] -1.998 -1.800 1.074 0.964 -4.034 -0.639 1.000 14234.194 14166.265 log_lik[52] -2.737 -2.637 0.832 0.789 -4.252 -1.560 1.000 16304.750 12023.759 log_lik[53] -1.559 -1.385 0.459 0.238 -2.510 -1.210 1.000 14107.993 13347.598 log_lik[54] -0.391 -0.275 0.387 0.265 -1.168 -0.026 1.000 14313.378 9499.950 log_lik[55] -0.052 -0.002 0.128 0.003 -0.284 0.000 1.000 18459.484 12685.957 log_lik[56] -0.387 -0.276 0.381 0.267 -1.130 -0.028 1.000 15205.235 10722.451 log_lik[57] -0.053 -0.002 0.135 0.003 -0.287 0.000 1.000 17407.981 11299.633 log_lik[58] -1.814 -1.668 0.690 0.628 -3.158 -0.993 1.000 16037.043 13065.443 log_lik[59] -4.532 -4.248 2.201 2.211 -8.590 -1.479 1.000 11401.356 12312.459 log_lik[60] -3.362 -3.052 1.571 1.507 -6.338 -1.429 1.000 12101.333 11993.522 log_lik[61] -0.001 0.000 0.005 0.000 -0.001 0.000 1.000 9457.115 NA log_lik[62] -1.801 -1.680 0.382 0.294 -2.568 -1.447 1.000 11312.549 11133.101 log_lik[63] 0.000 0.000 0.001 0.000 0.000 0.000 1.000 16860.871 NA log_lik[64] -0.001 0.000 0.006 0.000 -0.003 0.000 1.000 10963.858 NA log_lik[65] 0.000 0.000 0.001 0.000 0.000 0.000 1.000 16840.909 NA log_lik[66] -0.045 -0.007 0.113 0.010 -0.222 0.000 1.000 19018.720 12560.942 log_lik[67] -0.001 0.000 0.006 0.000 -0.002 0.000 1.000 10451.529 NA log_lik[68] 0.000 0.000 0.003 0.000 0.000 0.000 1.000 10654.988 NA log_lik[69] -0.013 -0.001 0.037 0.001 -0.068 0.000 1.000 13528.388 11039.977 log_lik[70] -1.240 -1.041 0.888 0.810 -2.972 -0.183 1.000 20233.078 12401.036 log_lik[71] -0.001 0.000 0.006 0.000 0.000 0.000 1.000 9996.130 NA log_lik[72] -0.117 -0.068 0.139 0.082 -0.401 -0.002 1.000 15991.019 13022.819 log_lik[73] -0.001 0.000 0.010 0.000 -0.004 0.000 1.000 19343.847 12487.923 log_lik[74] -0.001 0.000 0.004 0.000 -0.002 0.000 1.000 12678.437 NA log_lik[75] 0.000 0.000 0.001 0.000 0.000 0.000 1.000 16476.816 NA log_lik[76] -0.001 0.000 0.005 0.000 -0.002 0.000 1.000 10945.909 NA log_lik[77] 0.000 0.000 0.001 0.000 0.000 0.000 1.000 17713.038 NA log_lik[78] -0.014 -0.001 0.045 0.001 -0.069 0.000 1.000 16862.552 11916.085 log_lik[79] 0.000 0.000 0.000 0.000 0.000 0.000 1.000 18658.874 NA log_lik[80] 0.000 0.000 0.001 0.000 0.000 0.000 1.000 18142.299 NA log_lik[81] -0.001 0.000 0.007 0.000 -0.001 0.000 1.000 9436.027 NA log_lik[82] -3.158 -3.087 0.862 0.875 -4.771 -1.849 1.000 7322.187 3560.450 log_lik[83] 0.000 0.000 0.001 0.000 0.000 0.000 1.000 17502.868 NA log_lik[84] -0.001 0.000 0.008 0.000 -0.004 0.000 1.000 10979.293 NA log_lik[85] 0.000 0.000 0.001 0.000 0.000 0.000 1.000 16793.123 NA log_lik[86] -0.066 -0.014 0.143 0.020 -0.318 0.000 1.000 22394.705 11418.492 log_lik[87] -0.001 0.000 0.008 0.000 -0.004 0.000 1.000 10480.306 NA log_lik[88] 0.000 0.000 0.005 0.000 0.000 0.000 1.000 10785.309 NA log_lik[89] -0.016 -0.001 0.042 0.002 -0.084 0.000 1.000 13961.386 11388.177 log_lik[90] -1.232 -1.084 0.382 0.179 -2.021 -0.954 1.000 10153.630 10369.427 log_lik[91] -0.001 0.000 0.007 0.000 -0.001 0.000 1.000 9947.253 NA log_lik[92] -0.143 -0.089 0.158 0.101 -0.466 -0.004 1.000 16831.763 13804.201 log_lik[93] -0.002 0.000 0.012 0.000 -0.007 0.000 1.000 20675.484 12114.967 log_lik[94] -0.001 0.000 0.005 0.000 -0.002 0.000 1.000 12215.890 NA log_lik[95] 0.000 0.000 0.001 0.000 0.000 0.000 1.000 16947.733 NA log_lik[96] -0.001 0.000 0.005 0.000 -0.003 0.000 1.000 11153.665 NA log_lik[97] 0.000 0.000 0.002 0.000 0.000 0.000 1.000 17862.181 NA log_lik[98] -0.020 -0.002 0.060 0.002 -0.103 0.000 1.000 18782.946 11704.190 log_lik[99] 0.000 0.000 0.000 0.000 0.000 0.000 1.000 20525.158 NA log_lik[100] 0.000 0.000 0.002 0.000 0.000 0.000 1.000 19449.648 NA log_lik[101] -0.001 0.000 0.006 0.000 -0.001 0.000 1.000 9717.631 NA log_lik[102] -6.184 -6.084 1.404 1.386 -8.654 -4.027 1.000 8126.676 3437.891 log_lik[103] 0.000 0.000 0.001 0.000 0.000 0.000 1.000 17955.533 NA log_lik[104] -0.001 0.000 0.007 0.000 -0.004 0.000 1.000 10873.063 NA log_lik[105] 0.000 0.000 0.001 0.000 0.000 0.000 1.000 17268.072 NA log_lik[106] -0.066 -0.014 0.145 0.020 -0.312 0.000 1.000 18475.796 11648.380 log_lik[107] -0.001 0.000 0.008 0.000 -0.004 0.000 1.000 10565.460 NA log_lik[108] 0.000 0.000 0.004 0.000 0.000 0.000 1.000 10910.448 NA log_lik[109] -0.016 -0.001 0.041 0.002 -0.085 0.000 1.000 13610.583 10430.283 log_lik[110] -1.489 -1.293 0.984 0.937 -3.385 -0.254 1.000 20957.796 11669.057 log_lik[111] -0.001 0.000 0.008 0.000 -0.001 0.000 1.000 10127.802 NA log_lik[112] -0.143 -0.089 0.158 0.102 -0.469 -0.004 1.001 15119.879 12284.760 log_lik[113] -0.002 0.000 0.014 0.000 -0.008 0.000 1.000 19005.168 12576.106 log_lik[114] -0.001 0.000 0.005 0.000 -0.002 0.000 1.000 12565.621 NA log_lik[115] 0.000 0.000 0.001 0.000 0.000 0.000 1.000 17375.455 NA log_lik[116] -0.001 0.000 0.005 0.000 -0.002 0.000 1.000 11117.086 NA log_lik[117] 0.000 0.000 0.001 0.000 0.000 0.000 1.000 18190.572 NA log_lik[118] -0.022 -0.002 0.068 0.002 -0.107 0.000 1.000 16619.778 11467.176 log_lik[119] 0.000 0.000 0.001 0.000 0.000 0.000 1.000 18696.747 NA log_lik[120] 0.000 0.000 0.002 0.000 0.000 0.000 1.000 17501.378 NA log_lik[121] -0.024 -0.001 0.066 0.002 -0.135 0.000 1.000 9767.472 8442.985 log_lik[122] -4.980 -4.915 0.812 0.832 -6.429 -3.745 1.000 7788.272 4020.285 log_lik[123] -0.002 0.000 0.011 0.000 -0.010 0.000 1.000 17022.395 11992.274 log_lik[124] -0.024 -0.003 0.053 0.005 -0.120 0.000 1.000 11391.578 10785.712 log_lik[125] -0.002 0.000 0.013 0.000 -0.010 0.000 1.000 17829.986 NA log_lik[126] -1.653 -1.478 0.459 0.189 -2.531 -1.341 1.001 11518.269 13726.478 log_lik[127] -0.023 -0.003 0.051 0.005 -0.115 0.000 1.000 11173.338 10009.233 log_lik[128] -0.017 0.000 0.060 0.001 -0.091 0.000 1.000 10047.249 9381.180 log_lik[129] -0.262 -0.196 0.236 0.195 -0.732 -0.014 1.000 14356.919 11810.745 log_lik[130] -4.341 -4.242 1.053 1.022 -6.238 -2.789 1.000 20375.244 13404.587 log_lik[131] -0.024 -0.002 0.065 0.002 -0.128 0.000 1.000 9758.504 8499.230 log_lik[132] -3.426 -3.283 1.005 0.933 -5.286 -2.070 1.000 16395.344 11320.991 log_lik[133] -0.346 -0.218 0.381 0.244 -1.124 -0.013 1.000 22313.879 13734.902 log_lik[134] -0.016 -0.002 0.038 0.003 -0.078 0.000 1.000 13262.402 10765.907 log_lik[135] -0.002 0.000 0.011 0.000 -0.011 0.000 1.000 18300.480 NA log_lik[136] -0.016 -0.002 0.038 0.003 -0.079 0.000 1.000 12446.658 10715.602 log_lik[137] -0.002 0.000 0.011 0.000 -0.011 0.000 1.000 18002.820 NA log_lik[138] -1.390 -1.212 0.921 0.860 -3.150 -0.247 1.000 18799.110 13603.996 log_lik[139] -0.008 0.000 0.029 0.001 -0.038 0.000 1.000 21093.035 13794.814 log_lik[140] -0.024 -0.004 0.059 0.006 -0.116 0.000 1.000 20466.469 13031.781 log_lik[141] -0.142 -0.066 0.191 0.090 -0.541 -0.001 1.000 10576.389 10363.725 log_lik[142] -4.152 -4.143 0.600 0.633 -5.170 -3.168 1.000 8422.290 4733.919 log_lik[143] -0.008 0.000 0.029 0.000 -0.045 0.000 1.000 17314.155 11343.552 log_lik[144] -0.098 -0.050 0.128 0.065 -0.353 -0.001 1.000 13417.687 11237.266 log_lik[145] -0.009 0.000 0.032 0.000 -0.047 0.000 1.000 17600.896 12531.975 log_lik[146] -1.622 -1.527 0.247 0.113 -2.125 -1.444 1.000 12166.057 13861.541 log_lik[147] -0.095 -0.050 0.122 0.065 -0.347 -0.001 1.000 12757.511 10447.324 log_lik[148] -0.147 -0.051 0.228 0.073 -0.632 0.000 1.000 10411.569 10232.250 log_lik[149] -0.766 -0.716 0.402 0.394 -1.511 -0.214 1.000 15867.871 11598.405 log_lik[150] -2.656 -2.575 0.651 0.630 -3.850 -1.723 1.000 20501.811 10967.384 log_lik[151] -0.143 -0.068 0.190 0.092 -0.538 -0.001 1.000 11245.605 11152.647 log_lik[152] -1.105 -1.044 0.175 0.117 -1.461 -0.954 1.000 14617.182 11271.487 log_lik[153] -3.254 -2.956 1.337 1.180 -5.827 -1.639 1.000 14715.739 13161.563 log_lik[154] -0.059 -0.025 0.090 0.033 -0.238 0.000 1.000 15141.349 11573.501 log_lik[155] -0.009 0.000 0.030 0.000 -0.050 0.000 1.000 18375.748 12894.399 log_lik[156] -0.060 -0.025 0.091 0.033 -0.237 0.000 1.000 14861.546 11610.129 log_lik[157] -0.009 0.000 0.030 0.000 -0.047 0.000 1.000 18160.418 11760.795 log_lik[158] -1.630 -1.517 0.293 0.143 -2.225 -1.412 1.000 12844.933 12462.850 log_lik[159] -0.214 -0.110 0.281 0.139 -0.770 -0.003 1.000 20143.324 11964.827 log_lik[160] -0.339 -0.226 0.346 0.242 -1.037 -0.015 1.000 19639.635 14018.313 log_lik[161] -0.223 -0.135 0.250 0.167 -0.736 -0.004 1.000 11093.147 10766.915 log_lik[162] -6.340 -6.343 0.751 0.799 -7.575 -5.095 1.000 8651.299 4972.942 log_lik[163] -0.011 0.000 0.035 0.000 -0.063 0.000 1.000 16976.523 11259.114 log_lik[164] -0.137 -0.084 0.157 0.099 -0.449 -0.003 1.000 14663.156 11904.772 log_lik[165] -0.012 0.000 0.041 0.000 -0.066 0.000 1.000 17740.005 12401.799 log_lik[166] -3.196 -3.076 1.031 1.003 -5.067 -1.757 1.000 17652.414 13389.767 log_lik[167] -0.135 -0.082 0.153 0.097 -0.448 -0.003 1.000 13883.154 10100.472 log_lik[168] -0.255 -0.127 0.322 0.169 -0.921 -0.002 1.000 10941.347 11445.193 log_lik[169] -5.088 -4.882 1.516 1.421 -7.881 -2.970 1.000 16441.060 12070.318 log_lik[170] -3.973 -3.882 0.943 0.919 -5.672 -2.606 1.000 21232.246 12050.915 log_lik[171] -0.224 -0.134 0.251 0.165 -0.746 -0.004 1.000 11944.172 12475.343 log_lik[172] -1.788 -1.731 0.538 0.525 -2.752 -1.011 1.000 16781.621 12109.565 log_lik[173] -4.200 -4.064 1.689 1.697 -7.159 -1.703 1.000 18448.871 13599.982 log_lik[174] -0.082 -0.040 0.112 0.051 -0.306 -0.001 1.000 15671.872 11112.353 log_lik[175] -0.012 0.000 0.038 0.000 -0.068 0.000 1.000 18586.588 12872.971 log_lik[176] -0.082 -0.040 0.111 0.052 -0.299 -0.001 1.000 15574.383 11284.855 log_lik[177] -0.012 0.000 0.038 0.000 -0.066 0.000 1.000 18300.486 11874.711 log_lik[178] -5.680 -5.520 1.673 1.621 -8.645 -3.190 1.000 16980.258 13966.687 log_lik[179] -0.457 -0.303 0.482 0.325 -1.404 -0.018 1.000 18699.759 14225.892 log_lik[180] -0.621 -0.486 0.519 0.435 -1.662 -0.056 1.000 19254.424 14544.409 log_lik[181] -0.001 0.000 0.006 0.000 -0.001 0.000 1.000 9411.146 NA log_lik[182] -6.181 -6.072 1.403 1.397 -8.632 -4.026 1.000 7530.568 3676.927 log_lik[183] 0.000 0.000 0.001 0.000 0.000 0.000 1.000 17731.694 NA log_lik[184] -0.001 0.000 0.007 0.000 -0.004 0.000 1.000 10712.573 NA log_lik[185] 0.000 0.000 0.002 0.000 0.000 0.000 1.000 16915.997 NA log_lik[186] -0.068 -0.014 0.145 0.020 -0.326 0.000 1.000 18516.830 11661.645 log_lik[187] -0.001 0.000 0.008 0.000 -0.003 0.000 1.000 10505.036 NA log_lik[188] 0.000 0.000 0.003 0.000 0.000 0.000 1.000 10570.054 NA log_lik[189] -0.016 -0.001 0.042 0.002 -0.084 0.000 1.000 13690.831 11232.811 log_lik[190] -1.488 -1.311 0.967 0.923 -3.358 -0.256 1.000 20568.486 12380.258 log_lik[191] -0.001 0.000 0.007 0.000 -0.001 0.000 1.000 9633.030 NA log_lik[192] -0.141 -0.090 0.154 0.102 -0.454 -0.004 1.000 15921.292 13141.646 log_lik[193] -0.002 0.000 0.015 0.000 -0.007 0.000 1.000 18656.712 12008.664 log_lik[194] -0.001 0.000 0.005 0.000 -0.003 0.000 1.000 12342.800 NA log_lik[195] 0.000 0.000 0.001 0.000 0.000 0.000 1.000 16733.203 NA log_lik[196] -0.001 0.000 0.005 0.000 -0.003 0.000 1.000 10903.010 NA log_lik[197] 0.000 0.000 0.001 0.000 0.000 0.000 1.000 18049.050 NA log_lik[198] -0.021 -0.002 0.061 0.002 -0.103 0.000 1.000 16106.161 11753.943 log_lik[199] 0.000 0.000 0.000 0.000 0.000 0.000 1.000 18707.266 NA log_lik[200] 0.000 0.000 0.001 0.000 0.000 0.000 1.000 18128.299 NA log_lik[201] -3.635 -3.225 1.819 1.747 -7.120 -1.507 1.000 10809.131 11601.284 log_lik[202] -4.418 -4.352 0.605 0.615 -5.498 -3.589 1.000 9599.377 11969.506 log_lik[203] -0.062 -0.003 0.162 0.004 -0.324 0.000 1.000 16360.899 11065.491 log_lik[204] -2.338 -2.026 1.106 0.917 -4.527 -1.224 1.000 11950.404 10391.523 log_lik[205] -0.065 -0.003 0.168 0.004 -0.352 0.000 1.000 16680.034 11734.636 log_lik[206] -4.617 -4.412 1.532 1.470 -7.421 -2.515 1.000 20827.351 13484.445 log_lik[207] -2.329 -2.040 1.081 0.930 -4.499 -1.223 1.000 12016.312 10545.588 log_lik[208] -4.889 -4.408 2.575 2.486 -9.801 -1.586 1.000 10703.574 12196.578 log_lik[209] -2.344 -2.145 0.827 0.767 -3.971 -1.428 1.000 13556.880 11184.328 log_lik[210] -13.391 -13.231 2.320 2.266 -17.463 -9.807 1.000 21040.004 10268.625 log_lik[211] -3.601 -3.211 1.783 1.700 -7.066 -1.506 1.000 10172.602 11039.250 log_lik[212] -1.375 -1.283 0.243 0.102 -1.853 -1.209 1.000 14437.498 15279.106 log_lik[213] -1.725 -1.520 0.532 0.245 -2.821 -1.341 1.000 15850.934 14998.902 log_lik[214] -1.706 -1.430 0.855 0.598 -3.413 -0.960 1.000 11779.491 9537.111 log_lik[215] -0.064 -0.003 0.160 0.004 -0.348 0.000 1.000 18108.823 12753.341 log_lik[216] -1.702 -1.424 0.847 0.587 -3.383 -0.959 1.000 12476.368 10236.719 log_lik[217] -0.063 -0.003 0.158 0.004 -0.346 0.000 1.000 17055.389 11289.853 log_lik[218] -8.440 -8.175 2.513 2.438 -12.927 -4.779 1.000 20205.095 13928.666 log_lik[219] -2.585 -2.215 1.188 0.928 -4.959 -1.454 1.000 13129.281 15166.405 log_lik[220] -2.257 -1.936 0.958 0.664 -4.206 -1.417 1.000 15598.041 14722.477 log_lik[221] -0.422 -0.333 0.358 0.313 -1.140 -0.029 1.000 13079.566 11587.630 log_lik[222] -4.259 -4.257 0.582 0.623 -5.211 -3.303 1.000 8829.163 6068.597 log_lik[223] -0.018 0.000 0.050 0.001 -0.096 0.000 1.000 17185.959 11774.825 log_lik[224] -0.223 -0.161 0.209 0.157 -0.634 -0.015 1.000 15742.555 11103.152 log_lik[225] -0.019 0.000 0.056 0.001 -0.101 0.000 1.000 17777.242 12354.371 log_lik[226] -2.247 -2.145 0.708 0.680 -3.572 -1.280 1.000 17526.967 13756.479 log_lik[227] -0.219 -0.160 0.203 0.156 -0.630 -0.015 1.000 15244.347 10903.342 log_lik[228] -0.557 -0.416 0.507 0.432 -1.557 -0.027 1.000 11822.970 12945.023 log_lik[229] -1.311 -1.253 0.519 0.498 -2.254 -0.580 1.000 15937.065 12606.795 log_lik[230] -3.181 -3.105 0.794 0.770 -4.604 -2.019 1.000 21337.149 10672.375 log_lik[231] -0.426 -0.334 0.359 0.316 -1.136 -0.030 1.000 13804.617 12550.482 log_lik[232] -4.014 -3.910 1.024 1.007 -5.868 -2.519 1.000 16708.134 11852.188 log_lik[233] -2.261 -2.064 0.773 0.673 -3.771 -1.432 1.000 15636.760 14160.807 log_lik[234] -0.129 -0.076 0.152 0.087 -0.431 -0.004 1.000 16229.078 11313.069 log_lik[235] -0.019 0.000 0.053 0.001 -0.106 0.000 1.000 18869.421 12626.345 log_lik[236] -0.128 -0.077 0.150 0.087 -0.424 -0.004 1.000 16832.883 11424.324 log_lik[237] -0.018 0.000 0.053 0.001 -0.102 0.000 1.000 18065.193 11585.261 log_lik[238] -3.860 -3.745 1.173 1.147 -5.972 -2.148 1.000 17481.459 13533.160 log_lik[239] -1.258 -1.067 0.885 0.800 -2.980 -0.193 1.000 18212.300 14594.569 log_lik[240] -1.173 -1.057 0.302 0.141 -1.777 -0.954 1.000 12959.055 13811.730 log_lik[241] -0.131 -0.063 0.176 0.085 -0.490 -0.001 1.000 16666.887 12344.080 log_lik[242] -0.304 -0.255 0.221 0.202 -0.724 -0.039 1.000 16445.702 13560.510 log_lik[243] -0.438 -0.393 0.266 0.255 -0.937 -0.092 1.000 16691.057 13723.638 log_lik[244] -0.051 -0.011 0.100 0.017 -0.239 0.000 1.001 14127.290 11581.971 log_lik[245] -0.163 -0.117 0.158 0.120 -0.480 -0.007 1.000 16506.295 13040.121 log_lik[246] -0.255 -0.205 0.204 0.172 -0.662 -0.026 1.000 17410.462 12560.903 log_lik[247] -0.781 -0.707 0.469 0.464 -1.653 -0.155 1.000 16927.814 12381.835 log_lik[248] -0.837 -0.795 0.339 0.329 -1.454 -0.353 1.001 16430.318 11070.762 log_lik[249] -1.019 -0.983 0.093 0.041 -1.200 -0.953 1.000 9565.235 11954.935 log_lik[250] -0.049 -0.012 0.096 0.017 -0.225 0.000 1.000 14843.633 11479.191 log_lik[251] -0.163 -0.117 0.156 0.117 -0.475 -0.008 1.000 16071.190 13369.516 log_lik[252] -0.254 -0.206 0.200 0.174 -0.652 -0.028 1.000 17574.369 13872.042 log_lik[253] -0.038 -0.007 0.080 0.010 -0.185 0.000 1.000 13586.280 10935.664 log_lik[254] -0.136 -0.092 0.139 0.100 -0.415 -0.005 1.000 16008.821 12706.637 log_lik[255] -0.218 -0.169 0.185 0.152 -0.582 -0.019 1.000 16947.080 13044.957 log_lik[256] -1.289 -1.212 0.311 0.276 -1.901 -0.959 1.000 16227.846 12750.265 log_lik[257] -1.369 -1.325 0.436 0.426 -2.162 -0.738 1.001 16743.712 11139.703 log_lik[258] -1.543 -1.503 0.453 0.454 -2.350 -0.876 1.000 16181.623 11637.486 log_lik[259] -3.435 -3.300 0.968 0.912 -5.235 -2.106 1.000 16487.964 13240.437 log_lik[260] -1.506 -1.456 0.465 0.448 -2.347 -0.832 1.001 16608.206 11498.169 log_lik[261] -1.668 -1.621 0.480 0.480 -2.524 -0.963 1.000 16472.069 10891.425 log_lik[262] -0.050 -0.012 0.097 0.017 -0.234 0.000 1.000 14452.723 11633.818 log_lik[263] -0.163 -0.116 0.156 0.118 -0.473 -0.008 1.000 16614.311 13442.100 log_lik[264] -0.255 -0.208 0.202 0.176 -0.654 -0.026 1.001 16753.842 12891.015 log_lik[265] -6.250 -6.111 1.893 1.900 -9.544 -3.369 1.000 14407.006 12328.378 log_lik[266] -2.175 -2.092 0.675 0.638 -3.391 -1.226 1.000 15784.284 12222.725 log_lik[267] -2.242 -2.182 0.641 0.625 -3.375 -1.316 1.000 16073.560 11579.635 log_lik[268] -1.794 -1.606 0.614 0.442 -3.010 -1.218 1.000 15684.077 13868.778 log_lik[269] -11.907 -11.736 2.277 2.189 -15.949 -8.489 1.001 16846.375 11243.314 log_lik[270] -20.720 -20.520 3.018 3.032 -25.988 -16.077 1.000 16163.036 10944.403 log_lik[271] -3.146 -3.060 0.841 0.818 -4.655 -1.911 1.000 15551.361 11650.163 log_lik[272] -2.088 -2.000 0.494 0.463 -3.024 -1.448 1.001 16230.616 12256.844 log_lik[273] -1.846 -1.798 0.520 0.515 -2.782 -1.080 1.000 16244.615 10926.431 log_lik[274] -5.370 -5.168 1.609 1.566 -8.332 -3.121 1.000 17545.266 13066.607 log_lik[275] -2.255 -2.164 0.714 0.673 -3.543 -1.257 1.000 15460.760 12745.387 log_lik[276] -2.308 -2.238 0.669 0.648 -3.507 -1.340 1.000 15503.812 11432.948 y_rep[1] 10.954 11.000 0.233 0.000 11.000 11.000 1.000 12945.519 NA y_rep[2] 6.310 6.000 1.696 1.483 4.000 9.000 1.000 16068.065 15744.989 y_rep[3] 10.996 11.000 0.060 0.000 11.000 11.000 1.000 15257.485 NA y_rep[4] 10.959 11.000 0.217 0.000 11.000 11.000 1.000 15299.366 NA y_rep[5] 10.996 11.000 0.064 0.000 11.000 11.000 1.000 15869.072 NA y_rep[6] 7.021 7.000 1.926 1.483 4.000 10.000 1.000 15866.302 15809.685 y_rep[7] 10.961 11.000 0.207 0.000 11.000 11.000 1.000 14284.437 NA y_rep[8] 10.960 11.000 0.232 0.000 11.000 11.000 1.000 13448.934 NA y_rep[9] 10.608 11.000 0.674 0.000 9.000 11.000 1.000 14773.573 NA y_rep[10] 5.392 5.000 1.776 1.483 2.000 8.000 1.000 16477.478 15696.818 y_rep[11] 10.955 11.000 0.231 0.000 11.000 11.000 1.000 13725.287 NA y_rep[12] 9.928 10.000 1.044 1.483 8.000 11.000 1.000 14846.184 NA y_rep[13] 10.248 11.000 1.006 0.000 8.000 11.000 1.000 16017.906 NA y_rep[14] 10.975 11.000 0.164 0.000 11.000 11.000 1.000 14107.582 NA y_rep[15] 10.996 11.000 0.067 0.000 11.000 11.000 1.000 16133.903 NA y_rep[16] 10.976 11.000 0.165 0.000 11.000 11.000 1.000 14235.365 NA y_rep[17] 10.997 11.000 0.059 0.000 11.000 11.000 1.000 16108.428 NA y_rep[18] 8.812 9.000 1.617 1.483 6.000 11.000 1.000 16335.766 NA y_rep[19] 10.971 11.000 0.180 0.000 11.000 11.000 1.000 14771.450 NA y_rep[20] 10.938 11.000 0.267 0.000 10.000 11.000 1.000 14866.499 NA y_rep[21] 10.998 11.000 0.046 0.000 11.000 11.000 1.000 15114.964 NA y_rep[22] 6.784 7.000 1.705 1.483 4.000 9.000 1.000 14314.275 15146.916 y_rep[23] 11.000 11.000 0.019 0.000 11.000 11.000 1.000 16026.728 NA y_rep[24] 10.996 11.000 0.064 0.000 11.000 11.000 1.000 15906.348 NA y_rep[25] 11.000 11.000 0.019 0.000 11.000 11.000 1.000 16025.198 NA y_rep[26] 10.735 11.000 0.614 0.000 10.000 11.000 1.000 17626.027 NA y_rep[27] 10.997 11.000 0.059 0.000 11.000 11.000 1.000 14718.164 NA y_rep[28] 10.999 11.000 0.022 0.000 11.000 11.000 1.000 16032.088 NA y_rep[29] 10.957 11.000 0.217 0.000 11.000 11.000 1.000 15042.776 NA y_rep[30] 8.608 9.000 1.578 1.483 6.000 11.000 1.000 17380.265 NA y_rep[31] 10.998 11.000 0.043 0.000 11.000 11.000 1.000 14976.467 NA y_rep[32] 10.718 11.000 0.564 0.000 10.000 11.000 1.000 16196.581 NA y_rep[33] 10.990 11.000 0.106 0.000 11.000 11.000 1.000 15641.277 NA y_rep[34] 10.997 11.000 0.054 0.000 11.000 11.000 1.000 14232.559 NA y_rep[35] 11.000 11.000 0.011 0.000 11.000 11.000 1.000 16018.316 NA y_rep[36] 10.998 11.000 0.044 0.000 11.000 11.000 1.000 15235.025 NA y_rep[37] 10.999 11.000 0.022 0.000 11.000 11.000 1.000 16028.642 NA y_rep[38] 10.913 11.000 0.325 0.000 10.000 11.000 1.000 15502.033 NA y_rep[39] 11.000 11.000 0.000 0.000 11.000 11.000 NA NA NA y_rep[40] 10.999 11.000 0.030 0.000 11.000 11.000 1.000 14031.155 NA y_rep[41] 9.249 10.000 1.448 1.483 7.000 11.000 1.000 16011.841 NA y_rep[42] 6.088 6.000 1.695 1.483 3.000 9.000 1.000 16104.100 15776.558 y_rep[43] 10.953 11.000 0.241 0.000 11.000 11.000 1.000 15591.883 NA y_rep[44] 10.306 11.000 0.928 0.000 9.000 11.000 1.000 15656.129 NA y_rep[45] 10.949 11.000 0.257 0.000 11.000 11.000 1.000 15945.617 NA y_rep[46] 1.810 2.000 1.376 1.483 0.000 4.000 1.000 16498.384 16480.661 y_rep[47] 10.307 11.000 0.914 0.000 9.000 11.000 1.000 16023.482 NA y_rep[48] 8.044 8.000 1.826 1.483 5.000 11.000 1.000 15689.884 NA y_rep[49] 8.815 9.000 1.501 1.483 6.000 11.000 1.000 15727.680 NA y_rep[50] 3.393 3.000 1.653 1.483 1.000 6.000 1.000 16691.230 16242.901 y_rep[51] 9.226 9.000 1.464 1.483 7.000 11.000 1.000 15752.089 NA y_rep[52] 8.599 9.000 1.507 1.483 6.000 11.000 1.000 16071.005 NA y_rep[53] 2.753 3.000 1.714 1.483 0.000 6.000 1.000 16178.247 15559.015 y_rep[54] 10.627 11.000 0.691 0.000 9.000 11.000 1.000 16230.558 NA y_rep[55] 10.949 11.000 0.254 0.000 11.000 11.000 1.000 16102.055 NA y_rep[56] 10.628 11.000 0.687 0.000 9.000 11.000 1.000 15648.090 NA y_rep[57] 10.947 11.000 0.268 0.000 11.000 11.000 1.000 16217.781 NA y_rep[58] 2.547 2.000 1.605 1.483 0.000 5.000 1.000 16869.280 15899.782 y_rep[59] 4.811 5.000 2.185 2.965 1.000 8.000 1.000 12978.393 14548.955 y_rep[60] 5.956 6.000 2.092 1.483 2.000 9.000 1.000 13674.999 15400.210 y_rep[61] 11.000 11.000 0.019 0.000 11.000 11.000 1.000 16022.903 NA y_rep[62] 7.100 7.000 1.726 1.483 4.000 10.000 1.000 14655.289 14867.821 y_rep[63] 11.000 11.000 0.008 0.000 11.000 11.000 1.000 16016.024 NA y_rep[64] 10.999 11.000 0.030 0.000 11.000 11.000 1.000 16042.934 NA y_rep[65] 11.000 11.000 0.000 0.000 11.000 11.000 NA NA NA y_rep[66] 10.954 11.000 0.238 0.000 11.000 11.000 1.000 16025.620 NA y_rep[67] 10.999 11.000 0.031 0.000 11.000 11.000 1.000 16044.207 NA y_rep[68] 11.000 11.000 0.014 0.000 11.000 11.000 1.000 16019.080 NA y_rep[69] 10.988 11.000 0.118 0.000 11.000 11.000 1.000 14379.032 NA y_rep[70] 9.854 10.000 1.256 1.483 7.000 11.000 1.001 17365.453 NA y_rep[71] 11.000 11.000 0.011 0.000 11.000 11.000 1.000 16018.316 NA y_rep[72] 10.881 11.000 0.364 0.000 10.000 11.000 1.000 14289.279 NA y_rep[73] 10.999 11.000 0.034 0.000 11.000 11.000 1.000 16053.785 NA y_rep[74] 11.000 11.000 0.016 0.000 11.000 11.000 1.000 16022.903 NA y_rep[75] 11.000 11.000 0.008 0.000 11.000 11.000 1.000 16016.024 NA y_rep[76] 11.000 11.000 0.021 0.000 11.000 11.000 1.000 16028.478 NA y_rep[77] 11.000 11.000 0.008 0.000 11.000 11.000 1.000 16016.024 NA y_rep[78] 10.985 11.000 0.133 0.000 11.000 11.000 1.000 15622.636 NA y_rep[79] 11.000 11.000 0.000 0.000 11.000 11.000 NA NA NA y_rep[80] 11.000 11.000 0.008 0.000 11.000 11.000 1.000 16016.024 NA y_rep[81] 10.999 11.000 0.022 0.000 11.000 11.000 1.000 16030.365 NA y_rep[82] 7.054 7.000 1.744 1.483 4.000 10.000 1.000 13933.057 15232.048 y_rep[83] 11.000 11.000 0.008 0.000 11.000 11.000 1.000 16016.024 NA y_rep[84] 10.998 11.000 0.040 0.000 11.000 11.000 1.000 14898.685 NA y_rep[85] 11.000 11.000 0.000 0.000 11.000 11.000 NA NA NA y_rep[86] 10.933 11.000 0.286 0.000 10.000 11.000 1.000 14811.553 NA y_rep[87] 10.999 11.000 0.033 0.000 11.000 11.000 1.000 16049.828 NA y_rep[88] 11.000 11.000 0.018 0.000 11.000 11.000 1.000 16024.280 NA y_rep[89] 10.985 11.000 0.128 0.000 11.000 11.000 1.000 14089.575 NA y_rep[90] 9.654 10.000 1.296 1.483 7.000 11.000 1.000 18086.282 NA y_rep[91] 10.999 11.000 0.028 0.000 11.000 11.000 1.000 16041.467 NA y_rep[92] 10.855 11.000 0.410 0.000 10.000 11.000 1.000 15596.852 NA y_rep[93] 10.998 11.000 0.048 0.000 11.000 11.000 1.000 14651.041 NA y_rep[94] 10.999 11.000 0.028 0.000 11.000 11.000 1.000 16040.758 NA y_rep[95] 11.000 11.000 0.000 0.000 11.000 11.000 NA NA NA y_rep[96] 10.999 11.000 0.030 0.000 11.000 11.000 1.000 16041.947 NA y_rep[97] 11.000 11.000 0.011 0.000 11.000 11.000 1.000 16018.316 NA y_rep[98] 10.979 11.000 0.155 0.000 11.000 11.000 1.000 15564.868 NA y_rep[99] 11.000 11.000 0.000 0.000 11.000 11.000 NA NA NA y_rep[100] 11.000 11.000 0.011 0.000 11.000 11.000 1.000 16018.316 NA y_rep[101] 10.999 11.000 0.027 0.000 11.000 11.000 1.000 16030.571 NA y_rep[102] 7.013 7.000 1.736 1.483 4.000 10.000 1.001 14021.229 14802.339 y_rep[103] 11.000 11.000 0.000 0.000 11.000 11.000 NA NA NA y_rep[104] 10.999 11.000 0.038 0.000 11.000 11.000 1.000 14768.856 NA y_rep[105] 11.000 11.000 0.016 0.000 11.000 11.000 1.000 16022.903 NA y_rep[106] 10.934 11.000 0.293 0.000 10.000 11.000 1.000 15968.283 NA y_rep[107] 10.999 11.000 0.034 0.000 11.000 11.000 1.000 16045.479 NA y_rep[108] 11.000 11.000 0.018 0.000 11.000 11.000 1.000 16024.280 NA y_rep[109] 10.986 11.000 0.122 0.000 11.000 11.000 1.000 14183.743 NA y_rep[110] 9.636 10.000 1.349 1.483 7.000 11.000 1.000 16706.773 NA y_rep[111] 10.999 11.000 0.024 0.000 11.000 11.000 1.000 16032.854 NA y_rep[112] 10.861 11.000 0.392 0.000 10.000 11.000 1.000 15229.887 NA y_rep[113] 10.997 11.000 0.052 0.000 11.000 11.000 1.000 16097.441 NA y_rep[114] 10.999 11.000 0.028 0.000 11.000 11.000 1.000 16038.634 NA y_rep[115] 11.000 11.000 0.014 0.000 11.000 11.000 1.000 16020.609 NA y_rep[116] 10.999 11.000 0.030 0.000 11.000 11.000 1.000 16042.934 NA y_rep[117] 11.000 11.000 0.008 0.000 11.000 11.000 1.000 16016.024 NA y_rep[118] 10.977 11.000 0.168 0.000 11.000 11.000 1.000 14517.865 NA y_rep[119] 11.000 11.000 0.008 0.000 11.000 11.000 1.000 16016.024 NA y_rep[120] 11.000 11.000 0.011 0.000 11.000 11.000 1.000 16018.316 NA y_rep[121] 10.975 11.000 0.171 0.000 11.000 11.000 1.000 13367.743 NA y_rep[122] 6.420 6.000 1.702 1.483 4.000 9.000 1.000 14705.361 14155.149 y_rep[123] 10.998 11.000 0.047 0.000 11.000 11.000 1.000 16086.244 NA y_rep[124] 10.975 11.000 0.166 0.000 11.000 11.000 1.000 14340.101 NA y_rep[125] 10.998 11.000 0.050 0.000 11.000 11.000 1.000 16089.346 NA y_rep[126] 8.309 8.000 1.715 1.483 5.000 11.000 1.000 16575.506 NA y_rep[127] 10.978 11.000 0.154 0.000 11.000 11.000 1.000 14241.820 NA y_rep[128] 10.983 11.000 0.141 0.000 11.000 11.000 1.000 12954.867 NA y_rep[129] 10.744 11.000 0.547 0.000 10.000 11.000 1.000 15586.431 NA y_rep[130] 5.978 6.000 1.785 1.483 3.000 9.000 1.000 16024.177 16216.496 y_rep[131] 10.978 11.000 0.162 0.000 11.000 11.000 1.000 14508.695 NA y_rep[132] 10.144 10.000 0.946 1.483 8.000 11.000 1.000 15540.656 NA y_rep[133] 10.668 11.000 0.658 0.000 9.000 11.000 1.000 16533.397 NA y_rep[134] 10.983 11.000 0.137 0.000 11.000 11.000 1.000 15846.525 NA y_rep[135] 10.998 11.000 0.046 0.000 11.000 11.000 1.000 15249.697 NA y_rep[136] 10.985 11.000 0.127 0.000 11.000 11.000 1.000 15587.173 NA y_rep[137] 10.997 11.000 0.052 0.000 11.000 11.000 1.000 15532.719 NA y_rep[138] 9.723 10.000 1.309 1.483 7.000 11.000 1.000 16847.949 NA y_rep[139] 10.992 11.000 0.090 0.000 11.000 11.000 1.000 15666.723 NA y_rep[140] 10.977 11.000 0.161 0.000 11.000 11.000 1.000 15533.873 NA y_rep[141] 10.859 11.000 0.414 0.000 10.000 11.000 1.000 13839.638 NA y_rep[142] 6.221 6.000 1.693 1.483 3.000 9.000 1.000 15647.872 15192.691 y_rep[143] 10.991 11.000 0.095 0.000 11.000 11.000 1.000 14933.091 NA y_rep[144] 10.906 11.000 0.331 0.000 10.000 11.000 1.000 15441.917 NA y_rep[145] 10.992 11.000 0.096 0.000 11.000 11.000 1.000 15326.786 NA y_rep[146] 4.737 5.000 1.857 1.483 2.000 8.000 1.000 15430.884 15884.819 y_rep[147] 10.907 11.000 0.324 0.000 10.000 11.000 1.000 13561.736 NA y_rep[148] 10.857 11.000 0.427 0.000 10.000 11.000 1.000 12723.259 NA y_rep[149] 10.270 10.000 0.885 1.483 9.000 11.000 1.000 15989.319 NA y_rep[150] 4.581 5.000 1.749 1.483 2.000 8.000 1.000 16636.570 15991.359 y_rep[151] 10.856 11.000 0.418 0.000 10.000 11.000 1.000 13780.026 NA y_rep[152] 9.510 10.000 1.210 1.483 7.000 11.000 1.000 16061.577 NA y_rep[153] 8.533 9.000 1.614 1.483 6.000 11.000 1.000 15684.736 NA y_rep[154] 10.940 11.000 0.260 0.000 10.000 11.000 1.000 14421.728 NA y_rep[155] 10.993 11.000 0.090 0.000 11.000 11.000 1.000 15590.724 NA y_rep[156] 10.940 11.000 0.257 0.000 10.000 11.000 1.000 15077.103 NA y_rep[157] 10.990 11.000 0.106 0.000 11.000 11.000 1.000 15619.450 NA y_rep[158] 6.606 7.000 1.898 1.483 3.000 10.000 1.000 15963.504 15819.608 y_rep[159] 10.788 11.000 0.525 0.000 10.000 11.000 1.000 15762.938 NA y_rep[160] 10.670 11.000 0.651 0.000 9.000 11.000 1.000 17129.764 NA y_rep[161] 10.784 11.000 0.515 0.000 10.000 11.000 1.000 14211.290 NA y_rep[162] 6.204 6.000 1.704 1.483 3.000 9.000 1.000 15476.822 15678.552 y_rep[163] 10.988 11.000 0.113 0.000 11.000 11.000 1.000 15754.565 NA y_rep[164] 10.867 11.000 0.387 0.000 10.000 11.000 1.000 14995.902 NA y_rep[165] 10.989 11.000 0.112 0.000 11.000 11.000 1.000 16188.023 NA y_rep[166] 3.974 4.000 1.792 1.483 1.000 7.000 1.000 16238.656 15401.027 y_rep[167] 10.867 11.000 0.390 0.000 10.000 11.000 1.000 14864.808 NA y_rep[168] 10.754 11.000 0.569 0.000 10.000 11.000 1.000 13828.735 NA y_rep[169] 10.076 10.000 0.990 1.483 8.000 11.000 1.000 16089.790 NA y_rep[170] 4.321 4.000 1.736 1.483 2.000 7.000 1.000 15988.136 15559.918 y_rep[171] 10.779 11.000 0.516 0.000 10.000 11.000 1.000 14360.968 NA y_rep[172] 9.361 10.000 1.258 1.483 7.000 11.000 1.000 15712.013 NA y_rep[173] 7.594 8.000 1.866 1.483 4.000 10.000 1.000 16632.372 15515.024 y_rep[174] 10.918 11.000 0.306 0.000 10.000 11.000 1.000 14241.572 NA y_rep[175] 10.986 11.000 0.124 0.000 11.000 11.000 1.000 15603.493 NA y_rep[176] 10.921 11.000 0.301 0.000 10.000 11.000 1.000 15702.086 NA y_rep[177] 10.988 11.000 0.113 0.000 11.000 11.000 1.000 15984.632 NA y_rep[178] 5.652 6.000 1.903 1.483 3.000 9.000 1.000 15747.112 15898.900 y_rep[179] 10.551 11.000 0.781 0.000 9.000 11.000 1.000 16772.220 NA y_rep[180] 10.416 11.000 0.860 0.000 9.000 11.000 1.000 16814.647 NA y_rep[181] 10.999 11.000 0.034 0.000 11.000 11.000 1.000 14267.771 NA y_rep[182] 7.009 7.000 1.712 1.483 4.000 10.000 1.000 14346.153 14186.397 y_rep[183] 11.000 11.000 0.000 0.000 11.000 11.000 NA NA NA y_rep[184] 10.999 11.000 0.034 0.000 11.000 11.000 1.000 14600.277 NA y_rep[185] 11.000 11.000 0.000 0.000 11.000 11.000 NA NA NA y_rep[186] 10.937 11.000 0.286 0.000 10.000 11.000 1.000 16097.350 NA y_rep[187] 10.999 11.000 0.036 0.000 11.000 11.000 1.000 14749.982 NA y_rep[188] 11.000 11.000 0.014 0.000 11.000 11.000 1.000 16020.609 NA y_rep[189] 10.986 11.000 0.124 0.000 11.000 11.000 1.000 15462.553 NA y_rep[190] 9.639 10.000 1.342 1.483 7.000 11.000 1.000 17104.873 NA y_rep[191] 10.999 11.000 0.024 0.000 11.000 11.000 1.000 16031.833 NA y_rep[192] 10.861 11.000 0.394 0.000 10.000 11.000 1.000 15688.996 NA y_rep[193] 10.998 11.000 0.049 0.000 11.000 11.000 1.000 16080.119 NA y_rep[194] 10.999 11.000 0.022 0.000 11.000 11.000 1.000 16030.939 NA y_rep[195] 11.000 11.000 0.011 0.000 11.000 11.000 1.000 16018.316 NA y_rep[196] 10.999 11.000 0.028 0.000 11.000 11.000 1.000 16033.377 NA y_rep[197] 11.000 11.000 0.000 0.000 11.000 11.000 NA NA NA y_rep[198] 10.979 11.000 0.165 0.000 11.000 11.000 1.000 16024.799 NA y_rep[199] 11.000 11.000 0.008 0.000 11.000 11.000 1.000 16016.024 NA y_rep[200] 11.000 11.000 0.008 0.000 11.000 11.000 1.000 16016.024 NA y_rep[201] 8.602 9.000 1.763 1.483 5.000 11.000 1.000 15082.033 NA y_rep[202] 6.035 6.000 1.689 1.483 3.000 9.000 1.000 15975.540 15746.802 y_rep[203] 10.938 11.000 0.285 0.000 10.000 11.000 1.000 16530.926 NA y_rep[204] 10.107 10.000 1.090 1.483 8.000 11.000 1.000 15055.156 NA y_rep[205] 10.936 11.000 0.289 0.000 10.000 11.000 1.000 16223.798 NA y_rep[206] 1.668 1.000 1.311 1.483 0.000 4.000 1.000 16587.901 16005.841 y_rep[207] 10.107 10.000 1.087 1.483 8.000 11.000 1.000 14589.604 NA y_rep[208] 6.885 7.000 2.172 2.965 3.000 10.000 1.000 13460.751 15199.566 y_rep[209] 8.627 9.000 1.593 1.483 6.000 11.000 1.000 15825.848 NA y_rep[210] 3.328 3.000 1.648 1.483 1.000 6.000 1.000 16074.852 15437.385 y_rep[211] 8.575 9.000 1.758 1.483 5.000 11.000 1.000 12378.105 NA y_rep[212] 8.508 9.000 1.529 1.483 6.000 11.000 1.000 15885.021 NA y_rep[213] 2.416 2.000 1.634 1.483 0.000 5.000 1.000 17466.738 15847.396 y_rep[214] 10.534 11.000 0.791 0.000 9.000 11.000 1.000 15739.357 NA y_rep[215] 10.940 11.000 0.293 0.000 11.000 11.000 1.000 16960.099 NA y_rep[216] 10.536 11.000 0.796 0.000 9.000 11.000 1.000 15670.277 NA y_rep[217] 10.936 11.000 0.290 0.000 10.000 11.000 1.000 16027.577 NA y_rep[218] 2.330 2.000 1.546 1.483 0.000 5.000 1.000 16589.943 15784.442 y_rep[219] 4.054 4.000 2.036 1.483 1.000 8.000 1.000 14819.327 14488.130 y_rep[220] 5.352 5.000 2.051 1.483 2.000 9.000 1.000 14875.722 15121.648 y_rep[221] 10.589 11.000 0.704 0.000 9.000 11.000 1.000 14593.894 NA y_rep[222] 6.161 6.000 1.694 1.483 3.000 9.000 1.000 14764.900 16043.629 y_rep[223] 10.983 11.000 0.138 0.000 11.000 11.000 1.000 16361.887 NA y_rep[224] 10.781 11.000 0.505 0.000 10.000 11.000 1.000 14797.572 NA y_rep[225] 10.984 11.000 0.130 0.000 11.000 11.000 1.000 15010.772 NA y_rep[226] 3.084 3.000 1.657 1.483 1.000 6.000 1.000 15526.560 15826.189 y_rep[227] 10.779 11.000 0.500 0.000 10.000 11.000 1.000 14686.327 NA y_rep[228] 10.468 11.000 0.837 0.000 9.000 11.000 1.000 14697.477 NA y_rep[229] 9.773 10.000 1.127 1.483 8.000 11.000 1.000 16123.606 NA y_rep[230] 3.972 4.000 1.719 1.483 1.000 7.000 1.000 15642.662 15354.337 y_rep[231] 10.590 11.000 0.704 0.000 9.000 11.000 1.000 14920.793 NA y_rep[232] 9.138 9.000 1.329 1.483 7.000 11.000 1.000 15971.848 NA y_rep[233] 5.869 6.000 1.927 1.483 3.000 9.000 1.000 15458.164 15356.930 y_rep[234] 10.876 11.000 0.371 0.000 10.000 11.000 1.000 14506.902 NA y_rep[235] 10.982 11.000 0.140 0.000 11.000 11.000 1.000 14441.221 NA y_rep[236] 10.874 11.000 0.377 0.000 10.000 11.000 1.000 15157.082 NA y_rep[237] 10.982 11.000 0.143 0.000 11.000 11.000 1.000 15646.095 NA y_rep[238] 4.514 4.000 1.840 1.483 2.000 8.000 1.000 15840.173 15462.334 y_rep[239] 9.849 10.000 1.250 1.483 7.000 11.000 1.000 17384.667 NA y_rep[240] 9.722 10.000 1.237 1.483 7.000 11.000 1.000 16054.376 NA y_rep[241] 10.866 11.000 0.398 0.000 10.000 11.000 1.000 15086.522 NA y_rep[242] 10.704 11.000 0.571 0.000 10.000 11.000 1.000 15779.634 NA y_rep[243] 10.574 11.000 0.683 0.000 9.000 11.000 1.000 15917.502 NA y_rep[244] 10.952 11.000 0.239 0.000 11.000 11.000 1.000 14391.066 NA y_rep[245] 10.838 11.000 0.424 0.000 10.000 11.000 1.000 16339.329 NA y_rep[246] 10.748 11.000 0.528 0.000 10.000 11.000 1.000 16158.541 NA y_rep[247] 10.259 11.000 0.922 0.000 8.000 11.000 1.000 16611.119 NA y_rep[248] 10.215 10.000 0.907 1.483 9.000 11.000 1.000 15987.711 NA y_rep[249] 10.017 10.000 1.004 1.483 8.000 11.000 1.000 15598.447 NA y_rep[250] 10.950 11.000 0.245 0.000 11.000 11.000 1.000 14313.682 NA y_rep[251] 10.838 11.000 0.427 0.000 10.000 11.000 1.000 15441.811 NA y_rep[252] 10.758 11.000 0.514 0.000 10.000 11.000 1.000 15867.514 NA y_rep[253] 10.964 11.000 0.204 0.000 11.000 11.000 1.000 15437.144 NA y_rep[254] 10.861 11.000 0.398 0.000 10.000 11.000 1.000 15510.222 NA y_rep[255] 10.785 11.000 0.488 0.000 10.000 11.000 1.000 16151.924 NA y_rep[256] 9.167 9.000 1.345 1.483 7.000 11.000 1.000 16058.771 NA y_rep[257] 9.719 10.000 1.124 1.483 8.000 11.000 1.000 15528.032 NA y_rep[258] 9.571 10.000 1.175 1.483 7.000 11.000 1.000 15334.473 NA y_rep[259] 8.799 9.000 1.441 1.483 6.000 11.000 1.000 16042.009 NA y_rep[260] 9.602 10.000 1.170 1.483 7.000 11.000 1.000 15983.906 NA y_rep[261] 9.453 10.000 1.215 1.483 7.000 11.000 1.000 15864.226 NA y_rep[262] 10.955 11.000 0.235 0.000 11.000 11.000 1.000 13621.122 NA y_rep[263] 10.836 11.000 0.433 0.000 10.000 11.000 1.000 15999.999 NA y_rep[264] 10.749 11.000 0.527 0.000 10.000 11.000 1.000 15381.287 NA y_rep[265] 6.958 7.000 1.839 1.483 4.000 10.000 1.000 16037.351 15905.774 y_rep[266] 9.054 9.000 1.372 1.483 7.000 11.000 1.000 15718.109 NA y_rep[267] 8.978 9.000 1.367 1.483 7.000 11.000 1.000 16109.036 NA y_rep[268] 9.918 10.000 1.081 1.483 8.000 11.000 1.000 16165.308 NA y_rep[269] 10.020 10.000 1.006 1.483 8.000 11.000 1.000 15839.571 NA y_rep[270] 9.850 10.000 1.055 1.483 8.000 11.000 1.000 15653.095 NA y_rep[271] 8.317 8.000 1.541 1.483 6.000 11.000 1.000 16267.757 NA y_rep[272] 9.435 10.000 1.243 1.483 7.000 11.000 1.000 15642.973 NA y_rep[273] 9.306 9.000 1.253 1.483 7.000 11.000 1.000 15626.507 NA y_rep[274] 6.805 7.000 1.858 1.483 4.000 10.000 1.000 16548.669 15433.671 y_rep[275] 8.983 9.000 1.383 1.483 7.000 11.000 1.000 15693.445 NA y_rep[276] 8.935 9.000 1.387 1.483 6.000 11.000 1.000 15742.378 NA 5.4 Results fit_summary_a_b &lt;- fit_pbo$summary(c(&#39;a&#39;,&#39;b&#39;)) fit_summary_a &lt;- fit_pbo$summary(c(&#39;a&#39;)) fit_summary_b &lt;- fit_pbo$summary(c(&#39;b&#39;)) fit_summary_theta &lt;- fit_pbo$summary(c(&#39;theta&#39;)) 5.4.1 Difficulty and discrimination Table for the benchmark functions table_benchmarks &lt;- fit_summary_a_b %&gt;% select(&#39;Benchmark ID&#39;=variable, Median=median, &#39;CI 5%&#39;=q5, &#39;CI 95%&#39;=q95) table_benchmarks$&#39;Benchmark ID&#39;&lt;-rep(benchmarks,2) kable(table_benchmarks, caption=&#39;Summary values of the discrimination and difficulty level parameters for the PBO benchmarks&#39;, booktabs=T, digits =3, format=&#39;html&#39;, linesep = &quot;&quot;) %&gt;% kable_styling() %&gt;% pack_rows(&quot;Discrimination value (a)&quot;,1,23) %&gt;% pack_rows(&quot;Difficulty level (b)&quot;,23,46) Table 5.2: Summary values of the discrimination and difficulty level parameters for the PBO benchmarks Benchmark ID Median CI 5% CI 95% Discrimination value (a) 1 3.707 1.355 7.305 2 3.701 1.391 7.285 3 2.411 0.885 5.567 4 3.189 1.192 6.686 5 2.367 0.888 5.625 6 3.155 1.196 6.756 7 1.699 1.006 2.816 8 5.220 2.877 8.540 9 3.928 2.097 6.707 10 0.059 0.015 0.117 11 3.170 1.206 6.663 12 2.611 0.900 5.968 13 3.151 1.202 6.678 14 1.408 0.890 2.249 15 2.645 0.912 6.013 16 4.789 2.009 8.585 17 1.274 0.571 2.647 18 0.484 0.306 0.735 19 1.055 0.537 2.014 20 0.491 0.289 0.888 21 0.403 0.245 0.694 22 0.582 0.325 1.056 Difficulty level (b) 23 2.581 1.467 4.192 1 -0.629 -1.930 0.389 2 -0.616 -1.901 0.397 3 -1.733 -4.570 -0.285 4 -3.185 -6.657 -1.031 5 -1.759 -4.580 -0.277 6 -3.217 -6.777 -1.026 7 0.633 -0.326 1.573 8 -0.041 -0.988 0.885 9 -0.151 -1.131 0.795 10 -3.523 -7.331 0.158 11 -3.179 -6.716 -1.038 12 -1.300 -3.673 -0.027 13 -3.233 -6.731 -1.010 14 1.099 0.127 2.067 15 -1.288 -3.671 -0.038 16 -0.331 -1.345 0.608 17 -1.308 -3.455 0.009 18 1.578 0.401 2.738 19 -0.695 -2.238 0.472 20 -3.298 -6.347 -1.254 21 -3.890 -7.018 -1.678 22 -2.388 -5.032 -0.633 23 0.360 -0.595 1.275 mcmc_intervals(draws_a) + scale_y_discrete(labels=benchmarks)+ labs(x=&#39;Discrimination parameter (a)&#39;, y=&#39;Benchmark function ID&#39;, title=&#39;Discrimination parameter distribution (PBO)&#39;) ## Scale for &#39;y&#39; is already present. Adding another scale for &#39;y&#39;, which will ## replace the existing scale. mcmc_intervals(draws_b) + scale_y_discrete(labels=benchmarks)+ labs(x=&#39;Difficulty level parameter (b)&#39;, y=&#39;Benchmark function ID&#39;, title=&#39;Difficulty level parameter distribution (PBO)&#39;) ## Scale for &#39;y&#39; is already present. Adding another scale for &#39;y&#39;, which will ## replace the existing scale. 5.4.2 Ability Creating a table table_algorithms &lt;- fit_summary_theta %&gt;% select(Algorithms=variable, Median=median, &#39;CI 5%&#39;=q5, &#39;CI 95%&#39;=q95) table_algorithms$Algorithms &lt;- algorithms kable(table_algorithms, caption=&#39;Summary values of the ability level of the algorithms (PBO)&#39;, booktabs=T, digits =3, format=&#39;html&#39;, linesep = &quot;&quot;) %&gt;% kable_styling() Table 5.3: Summary values of the ability level of the algorithms (PBO) Algorithms Median CI 5% CI 95% (1+(λ,λ)) GA 1.496 0.464 2.545 (1+1) EA_&gt;0 4.290 2.589 6.494 (1+1) fGA 5.931 3.761 8.694 (1+10) EA_{r/2,2r} 6.432 4.080 9.362 (1+10) EA_&gt;0 5.913 3.736 8.721 (1+10) EA_logNormal 5.944 3.725 8.758 (1+10) EA_normalized 1.939 0.847 3.077 (1+10) EA_var_ctrl 0.886 -0.083 1.850 (30,30) vGA -0.155 -1.120 0.777 EDA 0.679 -0.277 1.625 gHC -0.081 -1.021 0.833 RLS 0.420 -0.518 1.337 mcmc_intervals(draws_theta) + scale_y_discrete(labels=algorithms)+ labs(x=unname(TeX(&quot;Ability level ($\\\\theta$)&quot;)), y=&#39;Algorithm&#39;, title=&#39;Ability level parameter distribution (PBO)&#39;) ## Scale for &#39;y&#39; is already present. Adding another scale for &#39;y&#39;, which will ## replace the existing scale. 5.4.3 Item information We will use the same functions from the BBOB case study Creating a single data frame item_information_df &lt;- NULL for(i in seq(1:length(benchmarks))){ a&lt;-as.matrix(fit_summary_a[i,c(3,6,7)]) b&lt;-as.matrix(fit_summary_b[i,c(3,6,7)]) iinfo &lt;- item_info_with_intervals(a=a,b=b,item = i,thetamin = -7, thetamax = 5) item_information_df &lt;- rbind(item_information_df,iinfo) } Now we can create an information plot for every item item_information_df %&gt;% pivot_wider(names_from = &#39;pars&#39;, values_from = &#39;Information&#39;) %&gt;% ggplot(aes(x=theta))+ geom_line(aes(y=median), color=&#39;black&#39;)+ # geom_line(aes(y=q05), color=&#39;red&#39;, linetype=&#39;dashed&#39;)+ # geom_line(aes(y=q95), color=&#39;blue&#39;, linetype=&#39;dashed&#39;)+ facet_wrap(~item, ncol=4) + labs(title=&#39;Item information curve (PBO)&#39;, x=unname(TeX(&quot;Ability ($\\\\theta$)&quot;)), y=&#39;Information&#39;, color=&#39;Information interval&#39;)+ theme_bw() + theme(legend.position = &#39;bottom&#39;) 5.4.4 Test information We can also look at the test information. First, we need to pivot wider so we can sum the items test_information_df &lt;- item_information_df %&gt;% pivot_wider(names_from = &#39;item&#39;, values_from = &#39;Information&#39;) %&gt;% mutate(TestInfo = dplyr::select(., -theta, -pars) %&gt;% rowSums()) %&gt;% dplyr::select(theta, pars, TestInfo) Now that we have calculated the test parameters we can plot the test information First let’s get a horizontal line to show where the algorithms median ability lies alg_median &lt;- fit_summary_theta %&gt;% mutate(Algorithm=algorithms) %&gt;% select(Algorithm, median) test_information_df %&gt;% dplyr::select(theta, pars, TestInfo) %&gt;% pivot_wider(names_from = &#39;pars&#39;, values_from = &#39;TestInfo&#39;) %&gt;% ggplot(aes(x=theta)) + geom_line(aes(y=median))+ geom_vline(data=alg_median, aes(xintercept=median,color=Algorithm),linetype=&#39;dashed&#39;)+ labs( title=&#39;Test Information Curve (PBO)&#39;, x=unname(TeX(&quot;Ability ($\\\\theta$)&quot;)), y=&#39;Test information&#39;, color=&#39;Algorithm median&#39; )+ theme_bw()+ guides(color=guide_legend(nrow=5,byrow=TRUE))+ theme(legend.position = &#39;bottom&#39;) "],["extra-i-bbob-2009-and-2019.html", "Chapter 6 Extra I: BBOB 2009 and 2019 6.1 Importing the data 6.2 Preparing the Stan data 6.3 Diagnostics 6.4 Results", " Chapter 6 Extra I: BBOB 2009 and 2019 Here we have both 2009 and 2019 together in the analysis 6.1 Importing the data To illustrate and make the analysis we will use 5 as the number of dimensions for the benchmark functions d_bbob2009 &lt;- read_csv(&#39;data/bbob2009.csv&#39;) %&gt;% select(algId, DIM, funcId, runs, succ, budget) %&gt;% filter(DIM==5) d_bbob2019 &lt;- read_csv(&#39;data/bbob2019.csv&#39;) %&gt;% select(algId, DIM, funcId, runs, succ, budget) %&gt;% filter(DIM==5) d_bbob &lt;- rbind(d_bbob2009, d_bbob2019) %&gt;% mutate(algId_index = as.integer(as.factor(algId))) #vector with the names in order benchmarks &lt;- seq(1,24) algorithms &lt;- levels(as.factor(d_bbob$algId)) 6.2 Preparing the Stan data bbob_standata &lt;- list( N = nrow(d_bbob), y_succ = as.integer(d_bbob$succ), N_tries = as.integer(d_bbob$runs), p = d_bbob$algId_index, Np = as.integer(length(unique(d_bbob$algId_index))), item = as.integer(d_bbob$funcId), Nitem = as.integer(length(unique(d_bbob$funcId))) ) irt2pl &lt;- cmdstan_model(&#39;models/irt2pl.stan&#39;) fit_bbob &lt;- irt2pl$sample( data= bbob_standata, seed = seed, chains = 4, iter_sampling = 4000, parallel_chains = 4, max_treedepth = 15 ) fit_bbob$save_object(file=&#39;fitted/bbob-2009-2019-5.RDS&#39;) To load the fitted model to save time in compiling this document fit_bbob&lt;-readRDS(&#39;fitted/bbob-2009-2019-5.RDS&#39;) 6.3 Diagnostics Getting the draws from the posterior draws_a &lt;- fit_bbob$draws(&#39;a&#39;) draws_b &lt;- fit_bbob$draws(&#39;b&#39;) draws_theta &lt;- fit_bbob$draws(&#39;theta&#39;) 6.3.1 Traceplots mcmc_trace(draws_a) mcmc_trace(draws_b) mcmc_trace(draws_theta) 6.4 Results fit_summary_a_b &lt;- fit_bbob$summary(c(&#39;a&#39;,&#39;b&#39;)) fit_summary_a &lt;- fit_bbob$summary(c(&#39;a&#39;)) fit_summary_b &lt;- fit_bbob$summary(c(&#39;b&#39;)) fit_summary_theta &lt;- fit_bbob$summary(c(&#39;theta&#39;)) 6.4.1 Difficulty and discrimination Table for the benchmark functions table_benchmarks &lt;- fit_summary_a_b %&gt;% select(&#39;Benchmark ID&#39;=variable, Median=median, &#39;CI 5%&#39;=q5, &#39;CI 95%&#39;=q95) table_benchmarks$&#39;Benchmark ID&#39;&lt;-rep(benchmarks,2) kable(table_benchmarks, caption=&#39;Summary values of the discrimination and difficulty level parameters for the BBOB-2009 benchmarks&#39;, booktabs=T, digits =3, format=&#39;html&#39;, linesep = &quot;&quot;) %&gt;% kable_styling() %&gt;% pack_rows(&quot;Discrimination value (a)&quot;,1,24) %&gt;% pack_rows(&quot;Difficulty level (b)&quot;,25,48) Table 6.1: Summary values of the discrimination and difficulty level parameters for the BBOB-2009 benchmarks Benchmark ID Median CI 5% CI 95% Discrimination value (a) 1 5.316 3.835 7.369 2 1.887 1.201 2.779 3 2.132 1.365 3.182 4 1.446 0.823 2.379 5 0.053 0.033 0.085 6 0.877 0.497 1.483 7 1.117 0.608 1.932 8 2.068 1.344 2.998 9 1.624 0.996 2.463 10 1.541 0.907 2.360 11 1.326 0.755 2.096 12 0.877 0.505 1.480 13 0.801 0.461 1.361 14 0.801 0.464 1.367 15 0.789 0.457 1.310 16 0.805 0.467 1.357 17 0.800 0.472 1.366 18 0.801 0.466 1.364 19 1.786 1.043 2.794 20 0.730 0.436 1.216 21 0.823 0.436 1.529 22 0.476 0.270 1.015 23 0.800 0.469 1.363 24 0.804 0.467 1.359 Difficulty level (b) 1 0.009 -0.621 0.624 2 0.976 0.217 1.865 3 0.569 -0.131 1.302 4 0.858 0.062 1.857 5 6.603 3.765 10.043 6 2.657 1.281 5.048 7 1.666 0.620 3.413 8 0.856 0.134 1.665 9 1.206 0.382 2.234 10 1.293 0.455 2.485 11 1.603 0.649 3.122 12 2.706 1.319 4.982 13 3.032 1.511 5.580 14 2.960 1.447 5.415 15 2.618 1.270 4.863 16 3.013 1.514 5.479 17 3.045 1.509 5.448 18 2.990 1.481 5.465 19 0.805 0.057 1.723 20 3.018 1.525 5.389 21 2.130 0.796 4.427 22 3.423 1.250 6.472 23 3.029 1.502 5.482 24 2.976 1.487 5.450 mcmc_intervals(draws_a) + scale_y_discrete(labels=benchmarks)+ labs(x=&#39;Discrimination parameter (a)&#39;, y=&#39;Benchmark function ID&#39;, title=&#39;Discrimination parameter distribution (BBOB-2009)&#39;) ## Scale for &#39;y&#39; is already present. Adding another scale for &#39;y&#39;, which will ## replace the existing scale. mcmc_intervals(draws_b) + scale_y_discrete(labels=benchmarks)+ labs(x=&#39;Difficulty level parameter (b)&#39;, y=&#39;Benchmark function ID&#39;, title=&#39;Difficulty level parameter distribution (BBOB-2009)&#39;) ## Scale for &#39;y&#39; is already present. Adding another scale for &#39;y&#39;, which will ## replace the existing scale. 6.4.2 Ability Creating a table table_algorithms &lt;- fit_summary_theta %&gt;% select(Algorithms=variable, Median=median, &#39;CI 5%&#39;=q5, &#39;CI 95%&#39;=q95) table_algorithms$Algorithms &lt;- algorithms kable(table_algorithms, caption=&#39;Summary values of the ability level of the algorithms (BBOB-2009)&#39;, booktabs=T, digits =3, format=&#39;html&#39;, linesep = &quot;&quot;) %&gt;% kable_styling() Table 6.2: Summary values of the ability level of the algorithms (BBOB-2009) Algorithms Median CI 5% CI 95% adapt-Nelder-Mead-scipy-2019 -0.820 -1.641 -0.085 Adaptive_Two_Mode -0.147 -0.797 0.500 ALPS -0.569 -1.242 0.081 AMALGAM -0.540 -1.215 0.110 BAYEDA -0.570 -1.253 0.085 BFGS -5.993 -9.393 -3.547 BFGS-scipy-2019 -0.442 -1.103 0.204 BIPOP-CMA-ES -0.567 -1.257 0.086 Cauchy-EDA -0.561 -1.234 0.095 CG-scipy-2019 -4.277 -6.687 -2.495 CMA-ESPLUSSEL -0.568 -1.251 0.089 COBYLA-scipy-2019 -4.279 -6.793 -2.518 DASA -0.570 -1.246 0.086 DE-PSO -0.331 -0.981 0.298 DE-scipy-2019 -4.263 -6.758 -2.506 EDA-PSO -0.542 -1.223 0.098 FULLNEWUOA 0.104 -0.529 0.723 G3PCX -0.540 -1.224 0.109 GA -0.570 -1.239 0.087 GLOBAL -0.569 -1.246 0.084 iAMALGAM -0.335 -0.991 0.301 IPOP-SEP-CMA-ES -0.514 -1.193 0.129 L-BFGS-B-scipy-2019 -4.272 -6.810 -2.487 LSfminbnd -0.521 -1.197 0.124 LSstep -0.428 -1.086 0.215 MA-LS-CHAIN -0.526 -1.206 0.120 MCS 0.271 -0.365 0.900 NELDER -5.998 -9.444 -3.478 Nelder-Mead-scipy-2019 -1.591 -2.718 -0.663 NELDERDOERR -0.472 -1.137 0.173 NEWUOA -5.996 -9.352 -3.501 ONEFIFTH -0.264 -0.911 0.368 POEMS -0.527 -1.205 0.123 Powell-scipy-2019 0.718 0.055 1.371 PSO -0.512 -1.188 0.135 PSO_Bounds -0.566 -1.247 0.080 RANDOMSEARCH -0.573 -1.252 0.090 Rosenbrock -0.549 -1.229 0.101 RS-4-initIn0 -0.567 -1.251 0.080 RS-5-initIn0 -0.572 -1.242 0.084 RS-6-initIn0 -0.255 -0.902 0.375 TNC-scipy-2019 -4.275 -6.695 -2.522 VNS -0.563 -1.247 0.078 mcmc_intervals(draws_theta) + scale_y_discrete(labels=algorithms)+ labs(x=unname(TeX(&quot;Ability level ($\\\\theta$)&quot;)), y=&#39;Algorithm&#39;, title=&#39;Ability level parameter distribution (BBOB-2009)&#39;) ## Scale for &#39;y&#39; is already present. Adding another scale for &#39;y&#39;, which will ## replace the existing scale. 6.4.3 Item information Now we can create an information plot for every item item_information_df &lt;- NULL for(i in seq(1:length(benchmarks))){ a&lt;-as.matrix(fit_summary_a[i,c(3,6,7)]) b&lt;-as.matrix(fit_summary_b[i,c(3,6,7)]) iinfo &lt;- item_info_with_intervals(a=a,b=b,item = i,thetamin = -7, thetamax = 5) item_information_df &lt;- rbind(item_information_df,iinfo) } Now we can create an information plot for every item item_information_df %&gt;% pivot_wider(names_from = &#39;pars&#39;, values_from = &#39;Information&#39;) %&gt;% ggplot(aes(x=theta))+ geom_line(aes(y=median), color=&#39;black&#39;)+ # geom_line(aes(y=q05), color=&#39;red&#39;, linetype=&#39;dashed&#39;)+ # geom_line(aes(y=q95), color=&#39;blue&#39;, linetype=&#39;dashed&#39;)+ facet_wrap(~item, ncol=4) + labs(title=&#39;Item information curve (BBOB-2009)&#39;, x=unname(TeX(&quot;Ability ($\\\\theta$)&quot;)), y=&#39;Information&#39;, color=&#39;Information interval&#39;)+ theme_bw() + theme(legend.position = &#39;bottom&#39;) 6.4.4 Test information We can also look at the test information. First, we need to pivot wider so we can sum the items test_information_df &lt;- item_information_df %&gt;% pivot_wider(names_from = &#39;item&#39;, values_from = &#39;Information&#39;) %&gt;% mutate(TestInfo = dplyr::select(., -theta, -pars) %&gt;% rowSums()) %&gt;% dplyr::select(theta, pars, TestInfo) Now that we have calculated the test parameters we can plot the test information First let’s get a horizontal line to show where the algorithms median ability lies alg_median &lt;- fit_summary_theta %&gt;% mutate(Algorithm=algorithms) %&gt;% select(Algorithm, median) test_information_df %&gt;% dplyr::select(theta, pars, TestInfo) %&gt;% pivot_wider(names_from = &#39;pars&#39;, values_from = &#39;TestInfo&#39;) %&gt;% ggplot(aes(x=theta)) + geom_line(aes(y=median))+ geom_vline(data=alg_median, aes(xintercept=median,color=Algorithm),linetype=&#39;dashed&#39;)+ labs( title=&#39;Test Information Curve (BBOB-2009)&#39;, x=unname(TeX(&quot;Ability ($\\\\theta$)&quot;)), y=&#39;Test information&#39;, color=&#39;Algorithm median&#39; )+ theme_bw()+ guides(color=guide_legend(nrow=8,byrow=TRUE))+ theme(legend.position = &#39;bottom&#39;) "],["extra-ii-pbo-625-dimensions.html", "Chapter 7 Extra II: PBO 625 dimensions 7.1 Importing the data 7.2 Preparing the Stan data 7.3 Diagnostics 7.4 Results", " Chapter 7 Extra II: PBO 625 dimensions 7.1 Importing the data To illustrate and make the analysis we will use 5 as the number of dimensions for the benchmark functions d_pbo &lt;- read_csv(&#39;data/pbo.csv&#39;) %&gt;% select(algId, DIM, funcId, runs, succ, budget) %&gt;% filter(DIM==625) %&gt;% mutate(algId_index = as.integer(as.factor(algId))) #vector with the names in order benchmarks &lt;- seq(1,23) algorithms &lt;- levels(as.factor(d_pbo$algId)) 7.2 Preparing the Stan data pbo_standata &lt;- list( N = nrow(d_pbo), y_succ = as.integer(d_pbo$succ), N_tries = as.integer(d_pbo$runs), p = d_pbo$algId_index, Np = as.integer(length(unique(d_pbo$algId_index))), item = as.integer(d_pbo$funcId), Nitem = as.integer(length(unique(d_pbo$funcId))) ) irt2pl &lt;- cmdstan_model(&#39;models/irt2pl.stan&#39;) fit_pbo &lt;- irt2pl$sample( data= pbo_standata, seed = seed, chains = 4, iter_sampling = 4000, parallel_chains = 4, max_treedepth = 15 ) fit_pbo$save_object(file=&#39;fitted/pbo625.RDS&#39;) To load the fitted model to save time in compiling this document fit_pbo&lt;-readRDS(&#39;fitted/pbo625.RDS&#39;) 7.3 Diagnostics Getting the draws from the posterior draws_a &lt;- fit_pbo$draws(&#39;a&#39;) draws_b &lt;- fit_pbo$draws(&#39;b&#39;) draws_theta &lt;- fit_pbo$draws(&#39;theta&#39;) 7.3.1 Traceplots mcmc_trace(draws_a) mcmc_trace(draws_b) mcmc_trace(draws_theta) 7.4 Results fit_summary_a_b &lt;- fit_pbo$summary(c(&#39;a&#39;,&#39;b&#39;)) fit_summary_a &lt;- fit_pbo$summary(c(&#39;a&#39;)) fit_summary_b &lt;- fit_pbo$summary(c(&#39;b&#39;)) fit_summary_theta &lt;- fit_pbo$summary(c(&#39;theta&#39;)) 7.4.1 Difficulty and discrimination Table for the benchmark functions table_benchmarks &lt;- fit_summary_a_b %&gt;% select(&#39;Benchmark ID&#39;=variable, Median=median, &#39;CI 5%&#39;=q5, &#39;CI 95%&#39;=q95) table_benchmarks$&#39;Benchmark ID&#39;&lt;-rep(benchmarks,2) kable(table_benchmarks, caption=&#39;Summary values of the discrimination and difficulty level parameters for the PBO benchmarks&#39;, booktabs=T, digits =3, format=&#39;html&#39;, linesep = &quot;&quot;) %&gt;% kable_styling() %&gt;% pack_rows(&quot;Discrimination value (a)&quot;,1,23) %&gt;% pack_rows(&quot;Difficulty level (b)&quot;,23,46) Table 7.1: Summary values of the discrimination and difficulty level parameters for the PBO benchmarks Benchmark ID Median CI 5% CI 95% Discrimination value (a) 1 2.919 1.210 6.017 2 4.455 2.635 7.121 3 1.431 0.775 2.507 4 2.936 1.199 6.089 5 2.693 1.115 5.857 6 2.679 1.095 5.898 7 0.425 0.258 0.709 8 1.402 0.875 2.193 9 0.596 0.271 1.050 10 0.160 0.098 0.259 11 4.982 2.801 8.026 12 5.966 3.669 9.031 13 2.267 1.229 3.941 14 0.429 0.261 0.713 15 4.119 2.726 6.184 16 4.124 2.717 6.154 17 1.154 0.507 2.025 18 0.430 0.261 0.714 19 0.474 0.204 0.851 20 0.833 0.506 1.272 21 0.387 0.149 0.698 22 0.355 0.207 0.605 Difficulty level (b) 23 0.507 0.250 0.873 1 -3.133 -4.765 -1.961 2 -1.601 -2.543 -0.650 3 -3.031 -4.616 -1.801 4 -3.133 -4.780 -1.973 5 -3.522 -5.524 -2.213 6 -3.531 -5.666 -2.218 7 5.279 3.149 8.293 8 -1.929 -3.020 -0.898 9 -1.334 -2.901 -0.219 10 6.256 3.759 9.466 11 -2.276 -3.269 -1.288 12 -2.132 -3.109 -1.159 13 -2.599 -3.765 -1.529 14 5.439 3.279 8.445 15 -1.146 -2.068 -0.220 16 -1.142 -2.083 -0.220 17 1.434 0.381 2.766 18 5.402 3.274 8.395 19 1.347 0.176 3.052 20 -0.323 -1.295 0.624 21 -1.083 -2.847 0.136 22 4.730 2.659 7.668 23 2.017 0.748 3.890 mcmc_intervals(draws_a) + scale_y_discrete(labels=benchmarks)+ labs(x=&#39;Discrimination parameter (a)&#39;, y=&#39;Benchmark function ID&#39;, title=&#39;Discrimination parameter distribution (PBO)&#39;) ## Scale for &#39;y&#39; is already present. Adding another scale for &#39;y&#39;, which will ## replace the existing scale. mcmc_intervals(draws_b) + scale_y_discrete(labels=benchmarks)+ labs(x=&#39;Difficulty level parameter (b)&#39;, y=&#39;Benchmark function ID&#39;, title=&#39;Difficulty level parameter distribution (PBO)&#39;) ## Scale for &#39;y&#39; is already present. Adding another scale for &#39;y&#39;, which will ## replace the existing scale. 7.4.2 Ability Creating a table table_algorithms &lt;- fit_summary_theta %&gt;% select(Algorithms=variable, Median=median, &#39;CI 5%&#39;=q5, &#39;CI 95%&#39;=q95) table_algorithms$Algorithms &lt;- algorithms kable(table_algorithms, caption=&#39;Summary values of the ability level of the algorithms (PBO)&#39;, booktabs=T, digits =3, format=&#39;html&#39;, linesep = &quot;&quot;) %&gt;% kable_styling() Table 7.2: Summary values of the ability level of the algorithms (PBO) Algorithms Median CI 5% CI 95% (1+(λ,λ)) GA -1.371 -2.306 -0.437 (1+1) EA_&gt;0 2.184 1.027 3.383 (1+1) fGA 0.139 -0.831 1.150 (1+10) EA_{r/2,2r} 0.865 -0.177 1.949 (1+10) EA_&gt;0 0.340 -0.634 1.346 (1+10) EA_logNormal 0.330 -0.652 1.345 (1+10) EA_normalized 0.853 -0.177 1.926 (1+10) EA_var_ctrl 0.625 -0.384 1.709 (30,30) vGA -2.402 -3.382 -1.426 EDA -1.643 -2.587 -0.694 gHC -0.629 -1.557 0.302 RLS 0.935 -0.312 2.158 mcmc_intervals(draws_theta) + scale_y_discrete(labels=algorithms)+ labs(x=unname(TeX(&quot;Ability level ($\\\\theta$)&quot;)), y=&#39;Algorithm&#39;, title=&#39;Ability level parameter distribution (PBO)&#39;) ## Scale for &#39;y&#39; is already present. Adding another scale for &#39;y&#39;, which will ## replace the existing scale. 7.4.3 Item information We will use the same functions from the BBOB case study Creating a single data frame item_information_df &lt;- NULL for(i in seq(1:length(benchmarks))){ a&lt;-as.matrix(fit_summary_a[i,c(3,6,7)]) b&lt;-as.matrix(fit_summary_b[i,c(3,6,7)]) iinfo &lt;- item_info_with_intervals(a=a,b=b,item = i,thetamin = -7, thetamax = 5) item_information_df &lt;- rbind(item_information_df,iinfo) } Now we can create an information plot for every item item_information_df %&gt;% pivot_wider(names_from = &#39;pars&#39;, values_from = &#39;Information&#39;) %&gt;% ggplot(aes(x=theta))+ geom_line(aes(y=median), color=&#39;black&#39;)+ # geom_line(aes(y=q05), color=&#39;red&#39;, linetype=&#39;dashed&#39;)+ # geom_line(aes(y=q95), color=&#39;blue&#39;, linetype=&#39;dashed&#39;)+ facet_wrap(~item, ncol=4) + labs(title=&#39;Item information curve (PBO)&#39;, x=unname(TeX(&quot;Ability ($\\\\theta$)&quot;)), y=&#39;Information&#39;, color=&#39;Information interval&#39;)+ theme_bw() + theme(legend.position = &#39;bottom&#39;) 7.4.4 Test information We can also look at the test information. First, we need to pivot wider so we can sum the items test_information_df &lt;- item_information_df %&gt;% pivot_wider(names_from = &#39;item&#39;, values_from = &#39;Information&#39;) %&gt;% mutate(TestInfo = dplyr::select(., -theta, -pars) %&gt;% rowSums()) %&gt;% dplyr::select(theta, pars, TestInfo) Now that we have calculated the test parameters we can plot the test information First let’s get a horizontal line to show where the algorithms median ability lies alg_median &lt;- fit_summary_theta %&gt;% mutate(Algorithm=algorithms) %&gt;% select(Algorithm, median) test_information_df %&gt;% dplyr::select(theta, pars, TestInfo) %&gt;% pivot_wider(names_from = &#39;pars&#39;, values_from = &#39;TestInfo&#39;) %&gt;% ggplot(aes(x=theta)) + geom_line(aes(y=median))+ geom_vline(data=alg_median, aes(xintercept=median,color=Algorithm),linetype=&#39;dashed&#39;)+ labs( title=&#39;Test Information Curve (PBO)&#39;, x=unname(TeX(&quot;Ability ($\\\\theta$)&quot;)), y=&#39;Test information&#39;, color=&#39;Algorithm median&#39; )+ theme_bw()+ guides(color=guide_legend(nrow=5,byrow=TRUE))+ theme(legend.position = &#39;bottom&#39;) "]]
